{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal'; // import SpinnerModal from '../SpinnerModal/SpinnerModal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [previousPageURL, setPreviousPageURL] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [selectedPokemon, setSelectedPokemon] = useState('');\n  const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState('');\n  const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]); // const [type, setType] = useState([]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios.get(currentPageURL).then(res => {\n      setPreviousPageURL(res.data.previous);\n      setNextPageURL(res.data.next);\n      return res.data;\n    }).then(data => {\n      let pokemonNames = data.map();\n      let types = data.results.map((pokemon, idx) => {\n        let p = pokemon.url.split(\"/\");\n        let img_idx = p[p.length - 2];\n        let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\n        let getTypesURL = baseURL + \"/\" + img_idx.toString();\n        return [img_idx, source, getTypesURL, data];\n      });\n      return types;\n    }).then(data => {\n      console.log(data);\n      let URLs = data.map(element => element[2]);\n      let requests = URLs.map(url => {\n        return axios.get(url);\n      });\n      Promise.all(requests).then(res => {\n        setPokemons(data.map((pokemon, idx) => {\n          let image = /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data[1],\n            height: \"250\",\n            width: \"250\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.gridItem,\n            onClick: () => {\n              toggleModalHandler(true, pokemon.name, data[1]);\n            },\n            children: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this);\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\n    setSelectedPokemon(pokemonName);\n    setSelectedPokemonImageURL(pokemonImage);\n    setModal(isSet);\n    axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName).then(res => selectedPokemonSetAbilities(res.data.abilities)).catch(err => console.log(err));\n  };\n\n  const getPreviousPage = () => {\n    if (previousPageURL) setCurrentPageURL(previousPageURL);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (nextPageURL) setCurrentPageURL(nextPageURL);else setCurrentPageURL(baseURL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      name: selectedPokemon,\n      pokemonImage: selectedPokemonImageURL,\n      abilities: selectedPokemonAbilities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.NavButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"pre\",\n          className: classes.Previous,\n          style: previousPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next\",\n          className: classes.Next,\n          style: nextPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"2gpYFVpT9ZfEqEnQ7hmPPcPv9Ac=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","Pokemon","baseURL","currentPageURL","setCurrentPageURL","nextPageURL","setNextPageURL","previousPageURL","setPreviousPageURL","pokemons","setPokemons","modal","setModal","selectedPokemon","setSelectedPokemon","selectedPokemonImageURL","setSelectedPokemonImageURL","selectedPokemonAbilities","selectedPokemonSetAbilities","window","scrollTo","get","then","res","data","previous","next","pokemonNames","map","types","results","pokemon","idx","p","url","split","img_idx","length","source","toString","getTypesURL","console","log","URLs","element","requests","Promise","all","image","gridItem","toggleModalHandler","name","catch","err","isSet","pokemonName","pokemonImage","abilities","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","NavButtons","Previous","Next"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAG,mCAAhB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAACM,OAAD,CAApD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,uBAAD,EAA0BC,0BAA1B,IAAwDpB,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACqB,wBAAD,EAA2BC,2BAA3B,IAA0DtB,QAAQ,CAAC,EAAD,CAAxE,CATkB,CAUlB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA1B,IAAAA,KAAK,CAAC2B,GAAN,CAAUlB,cAAV,EACCmB,IADD,CACMC,GAAG,IAAI;AACTf,MAAAA,kBAAkB,CAACe,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAlB;AACAnB,MAAAA,cAAc,CAACiB,GAAG,CAACC,IAAJ,CAASE,IAAV,CAAd;AACA,aAAOH,GAAG,CAACC,IAAX;AACH,KALD,EAMCF,IAND,CAMME,IAAI,IAAE;AACR,UAAIG,YAAY,GAAGH,IAAI,CAACI,GAAL,EAAnB;AACA,UAAIC,KAAK,GAAGL,IAAI,CAACM,OAAL,CAAaF,GAAb,CAAiB,CAACG,OAAD,EAAUC,GAAV,KAAkB;AAC3C,YAAIC,CAAC,GAAGF,OAAO,CAACG,GAAR,CAAYC,KAAZ,CAAkB,GAAlB,CAAR;AACA,YAAIC,OAAO,GAAGH,CAAC,CAACA,CAAC,CAACI,MAAF,GAAW,CAAZ,CAAf;AACA,YAAIC,MAAM,GAAG,8EAA8EF,OAAO,CAACG,QAAR,EAA9E,GAAmG,MAAhH;AACA,YAAIC,WAAW,GAAGtC,OAAO,GAAG,GAAV,GAAgBkC,OAAO,CAACG,QAAR,EAAlC;AACA,eAAO,CAACH,OAAD,EAAUE,MAAV,EAAkBE,WAAlB,EAA+BhB,IAA/B,CAAP;AACC,OANO,CAAZ;AAQA,aAAOK,KAAP;AACH,KAjBD,EAkBCP,IAlBD,CAkBME,IAAI,IAAE;AACRiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA,UAAImB,IAAI,GAAGnB,IAAI,CAACI,GAAL,CAASgB,OAAO,IAAKA,OAAO,CAAC,CAAD,CAA5B,CAAX;AACA,UAAIC,QAAQ,GAAGF,IAAI,CAACf,GAAL,CAAUM,GAAD,IAAS;AAC7B,eAAOxC,KAAK,CAAC2B,GAAN,CAAUa,GAAV,CAAP;AACD,OAFY,CAAf;AAIAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACCvB,IADD,CACOC,GAAD,IAAS;AAEXb,QAAAA,WAAW,CAACc,IAAI,CAACI,GAAL,CAAS,CAACG,OAAD,EAAUC,GAAV,KAAkB;AAEnC,cAAIgB,KAAK,gBAAG;AAAK,YAAA,GAAG,EAAExB,IAAI,CAAC,CAAD,CAAd;AAAmB,YAAA,MAAM,EAAC,KAA1B;AAAgC,YAAA,KAAK,EAAC,KAAtC;AAA4C,YAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAAZ;;AACA,8BACI;AAAK,YAAA,SAAS,EAAE1B,OAAO,CAACmD,QAAxB;AAAkC,YAAA,OAAO,EAAE,MAAI;AAACC,cAAAA,kBAAkB,CAAC,IAAD,EAAOnB,OAAO,CAACoB,IAAf,EAAqB3B,IAAI,CAAC,CAAD,CAAzB,CAAlB;AAAgD,aAAhG;AAAA,sBACKwB;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKC,SARO,CAAD,CAAX;AASF,OAZF,EAYII,KAZJ,CAYWC,GAAD,IAAS;AACfZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACF,OAdF;AAeH,KAxCD;AA2CH,GA9CQ,EA8CN,CAAClD,cAAD,CA9CM,CAAT;;AAgDA,QAAM+C,kBAAkB,GAAG,CAACI,KAAD,EAAQC,WAAR,EAAqBC,YAArB,KAAsC;AAE7D1C,IAAAA,kBAAkB,CAACyC,WAAD,CAAlB;AACAvC,IAAAA,0BAA0B,CAACwC,YAAD,CAA1B;AACA5C,IAAAA,QAAQ,CAAC0C,KAAD,CAAR;AACA5D,IAAAA,KAAK,CAAC2B,GAAN,CAAU,uCAAuCkC,WAAjD,EACCjC,IADD,CACMC,GAAG,IAAIL,2BAA2B,CAACK,GAAG,CAACC,IAAJ,CAASiC,SAAV,CADxC,EAECL,KAFD,CAEOC,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAFd;AAIH,GATD;;AAUA,QAAMK,eAAe,GAAG,MAAM;AAC1B,QAAGnD,eAAH,EAAoBH,iBAAiB,CAACG,eAAD,CAAjB,CAApB,KACKoD,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,UAArC,GAAkD,QAAlD;AACR,GAHD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAG1D,WAAH,EAAgBD,iBAAiB,CAACC,WAAD,CAAjB,CAAhB,KACKD,iBAAiB,CAACF,OAAD,CAAjB;AACR,GAHD;;AAMA,sBACI;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACkE,gBAAxB;AAAA,gBACK,CAACrD,KAAD,IAAUF;AADf;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOKE,KAAK,iBACF,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEuC,kBAApB;AAAwC,MAAA,IAAI,EAAErC,eAA9C;AACA,MAAA,YAAY,EAAEE,uBADd;AAEA,MAAA,SAAS,EAAEE;AAFX;AAAA;AAAA;AAAA;AAAA,YARR,eAYI;AAAQ,MAAA,SAAS,EAAEnB,OAAO,CAACmE,UAA3B;AAAA,8BACI;AAAA,kBACK,CAACtD,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAiB,UAAA,SAAS,EAAEb,OAAO,CAACoE,QAApC;AACA,UAAA,KAAK,EAAE3D,eAAe,GAAE;AAACuD,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WADhD;AAEA,UAAA,OAAO,EAAIJ,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACK,CAAC/C,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,SAAS,EAAEb,OAAO,CAACqE,IAArC;AACA,UAAA,KAAK,EAAE9D,WAAW,GAAE;AAACyD,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WAD5C;AAEA,UAAA,OAAO,EAAIC,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAjHD;;GAAM9D,O;;KAAAA,O;AAkHN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\n// import SpinnerModal from '../SpinnerModal/SpinnerModal';\r\n\r\n\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n    const [nextPageURL, setNextPageURL] = useState('');\r\n    const [previousPageURL, setPreviousPageURL] = useState('');\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState('');\r\n    const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState(''); \r\n    const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\r\n    // const [type, setType] = useState([]);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n            setPreviousPageURL(res.data.previous);\r\n            setNextPageURL(res.data.next);\r\n            return res.data\r\n        })\r\n        .then(data=>{\r\n            let pokemonNames = data.map()\r\n            let types = data.results.map((pokemon, idx) => {\r\n                let p = pokemon.url.split(\"/\");\r\n                let img_idx = p[p.length - 2];\r\n                let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\r\n                let getTypesURL = baseURL + \"/\" + img_idx.toString();\r\n                return [img_idx, source, getTypesURL, data];\r\n                }\r\n            )\r\n            return types;\r\n        })\r\n        .then(data=>{\r\n            console.log(data)\r\n            let URLs = data.map(element =>  element[2])\r\n            let requests = URLs.map((url) => {\r\n                return axios.get(url);\r\n              });   \r\n\r\n            Promise.all(requests)\r\n            .then((res) => {\r\n     \r\n                setPokemons(data.map((pokemon, idx) => {\r\n                    \r\n                    let image = <img src={data[1]} height=\"250\" width=\"250\" alt=\"...\"></img>;\r\n                    return (\r\n                        <div className={classes.gridItem} onClick={()=>{toggleModalHandler(true, pokemon.name, data[1])}}>\r\n                            {image}\r\n                        </div>\r\n                        )\r\n                    }));\r\n             }).catch((err) => {\r\n                console.log(err)\r\n             });\r\n        })\r\n\r\n\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\r\n\r\n        setSelectedPokemon(pokemonName);\r\n        setSelectedPokemonImageURL(pokemonImage); \r\n        setModal(isSet);\r\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName)\r\n        .then(res => selectedPokemonSetAbilities(res.data.abilities))\r\n        .catch(err => console.log(err));\r\n       \r\n    }\r\n    const getPreviousPage = () => {\r\n        if(previousPageURL) setCurrentPageURL(previousPageURL);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(nextPageURL) setCurrentPageURL(nextPageURL);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>   \r\n\r\n            <Navbar/>\r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} name={selectedPokemon} \r\n                pokemonImage={selectedPokemonImageURL}\r\n                abilities={selectedPokemonAbilities}/>}\r\n            \r\n            <footer className={classes.NavButtons}>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"pre\" className={classes.Previous}\r\n                    style={previousPageURL? {visibility:'visible'}: {visibility: 'hidden'}}\r\n                    onClick = {getPreviousPage}>\r\n                        Previous\r\n                    </button>}\r\n                </div>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"next\" className={classes.Next}\r\n                    style={nextPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n                    onClick = {getNextPage}>\r\n                        Next\r\n                    </button>}   \r\n                </div>\r\n            </footer>  \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}