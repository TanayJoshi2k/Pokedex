{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal';\nimport PokemonCard from '../PokemonCard/PokemonCard';\nimport Footer from '../Footer/Footer';\nimport Gradients from \"../Gradients/Gradients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [pageURLs, setPageURLs] = useState([]);\n  const [selectedPokemonData, setSelectedPokemonData] = useState({}); // selectedPokemonData will store: \n  // name, imageURL, abilities, backgroundColor, stats and heightWeight\n\n  function fetchDetails() {\n    axios.get(currentPageURL).then(res => {\n      setPageURLs([res.data.previous, res.data.next]);\n      let requests = res.data.results.map(pokemon => {\n        return axios.get(pokemon.url);\n      });\n      return Promise.all(requests).then(data => {\n        console.log(data);\n        setPokemons(data);\n      });\n    });\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchDetails();\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage, backgroundColor) => {\n    setSelectedPokemonData({ ...selectedPokemonData,\n      'name': pokemonName,\n      'imageURL': pokemonImage,\n      'backgroundColor': backgroundColor,\n      'abilities': abilities,\n      'stats': stats,\n      'height': height,\n      'weight': weight\n    });\n    setModal(isSet); // The above setStates are batched together.\n  };\n\n  const getPreviousPage = () => {\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);else setCurrentPageURL(baseURL);\n  };\n\n  console.log(selectedPokemonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons.map((record, i) => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          toggleModal: () => toggleModalHandler(true, record.data.name, record.data.sprites.front_default, Gradients(record.data.types[0].type.name, record.data.types[1].type.name, record.data.types.length), record.data.abilities, record.data.stats, record.data.height, record.data.weight),\n          name: record.data.name,\n          image: record.data.sprites.front_default,\n          types: record.data.types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      backgroundColor: selectedPokemonData['backgroundColor'],\n      name: selectedPokemonData['name'],\n      pokemonImage: selectedPokemonData['imageURL'],\n      abilities: selectedPokemonData['abilities'],\n      stats: selectedPokemonData['stats'],\n      heightWeight: selectedPokemonData['heighWeight']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      modal: modal,\n      previousPageURL: pageURLs[0],\n      nextPageURL: pageURLs[1],\n      goNext: getNextPage,\n      goPrev: getPreviousPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"j/sf4f6vgOcjq0MzVd7s0q5qq6Y=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","PokemonCard","Footer","Gradients","Pokemon","baseURL","currentPageURL","setCurrentPageURL","pokemons","setPokemons","modal","setModal","pageURLs","setPageURLs","selectedPokemonData","setSelectedPokemonData","fetchDetails","get","then","res","data","previous","next","requests","results","map","pokemon","url","Promise","all","console","log","window","scrollTo","toggleModalHandler","isSet","pokemonName","pokemonImage","backgroundColor","abilities","stats","height","weight","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","record","i","name","sprites","front_default","types","type","length"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\nimport PokemonCard from '../PokemonCard/PokemonCard';\r\nimport Footer from '../Footer/Footer';\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [pageURLs, setPageURLs] = useState([]);\r\n    const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n    // selectedPokemonData will store: \r\n    // name, imageURL, abilities, backgroundColor, stats and heightWeight\r\n    function fetchDetails() {\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n            setPageURLs([res.data.previous, res.data.next])\r\n            let requests = res.data.results.map(pokemon=>{\r\n                return axios.get(pokemon.url)\r\n            })\r\n            return Promise.all(requests)\r\n            .then(data=>{\r\n                console.log(data)\r\n                setPokemons(data);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        fetchDetails();\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage, backgroundColor) => {\r\n\r\n        setSelectedPokemonData({\r\n            ...selectedPokemonData,\r\n            'name': pokemonName,\r\n            'imageURL': pokemonImage,\r\n            'backgroundColor': backgroundColor,\r\n            'abilities': abilities,\r\n            'stats': stats,\r\n            'height': height, \r\n            'weight': weight\r\n        });\r\n\r\n        setModal(isSet);\r\n        // The above setStates are batched together.\r\n\r\n    }\r\n    const getPreviousPage = () => {\r\n        if(pageURLs[0]) setCurrentPageURL(pageURLs[0]);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(pageURLs[1]) setCurrentPageURL(pageURLs[1]);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n    console.log(selectedPokemonData);\r\n    return (\r\n        <div>   \r\n            <Navbar/>\r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons.map((record, i)=>{\r\n            \r\n                    return <PokemonCard \r\n                    toggleModal={()=>\r\n                    toggleModalHandler(true, record.data.name, \r\n                        record.data.sprites.front_default, \r\n                        Gradients(record.data.types[0].type.name, record.data.types[1].type.name, record.data.types.length),\r\n                        record.data.abilities,\r\n                        record.data.stats,\r\n                        record.data.height,\r\n                        record.data.weight)}\r\n                    name={record.data.name} \r\n                    image={record.data.sprites.front_default} \r\n                    types={record.data.types}/>\r\n                    \r\n                })}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} \r\n                backgroundColor={selectedPokemonData['backgroundColor']}\r\n                name={selectedPokemonData['name']} \r\n                pokemonImage={selectedPokemonData['imageURL']}\r\n                abilities={selectedPokemonData['abilities']}\r\n                stats = {selectedPokemonData['stats']}\r\n                heightWeight={selectedPokemonData['heighWeight']}\r\n                />}\r\n\r\n            <Footer \r\n                modal={modal}\r\n                previousPageURL={pageURLs[0]}\r\n                nextPageURL={pageURLs[1]}\r\n                goNext={getNextPage}\r\n                goPrev={getPreviousPage}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}