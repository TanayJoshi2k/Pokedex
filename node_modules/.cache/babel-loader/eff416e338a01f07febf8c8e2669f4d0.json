{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./pokemon.module.css\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Modal from \"../Modal/Modal\";\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\nimport Footer from \"../Footer/Footer\";\nimport Gradients from \"../Gradients/Gradients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon\";\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [pageURLs, setPageURLs] = useState([]);\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\n\n  function fetchDetails() {\n    axios.get(currentPageURL).then(res => {\n      setPageURLs([res.data.previous, res.data.next]);\n      let requests = res.data.results.map(pokemon => {\n        return axios.get(pokemon.url);\n      });\n      return [Promise.all(requests)].then(data => {\n        setPokemons(data);\n      });\n    });\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchDetails();\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage, backgroundColor, abilities, stats, height, weight, types) => {\n    // The below setStates are batched together.\n    setSelectedPokemonData({ ...selectedPokemonData,\n      name: pokemonName,\n      imageURL: pokemonImage,\n      backgroundColor: backgroundColor,\n      abilities: abilities,\n      stats: stats,\n      height: height,\n      weight: weight,\n      types: types\n    });\n    setModal(isSet);\n  };\n\n  const getPreviousPage = () => {\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);else document.getElementById(\"pre\").style.visibility = \"hidden\";\n  };\n\n  const getNextPage = () => {\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);else setCurrentPageURL(baseURL);\n  };\n\n  console.log(selectedPokemonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!modal && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons.map((record, i) => {\n        let color = Gradients(record.data.types);\n\n        if (record.data.types.length === 2) {\n          color = Gradients(record.data.types[0].type.name, record.data.types[1].type.name, record.data.types.length);\n        } else {\n          color = Gradients(record.data.types[0].type.name, record.data.types[0].type.name, record.data.types.length);\n        }\n\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          toggleModal: () => toggleModalHandler(true, record.data.name, record.data.sprites.front_default, color, record.data.abilities, record.data.stats, record.data.height, record.data.weight, record.data.types),\n          types: record.data.types,\n          name: record.data.name,\n          image: record.data.sprites.front_default,\n          types: record.data.types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      backgroundColor: selectedPokemonData[\"backgroundColor\"],\n      name: selectedPokemonData[\"name\"],\n      pokemonImage: selectedPokemonData[\"imageURL\"],\n      abilities: selectedPokemonData[\"abilities\"],\n      stats: selectedPokemonData[\"stats\"],\n      height: selectedPokemonData[\"height\"],\n      weight: selectedPokemonData[\"weight\"],\n      types: selectedPokemonData[\"types\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), !modal && /*#__PURE__*/_jsxDEV(Footer, {\n      modal: modal,\n      previousPageURL: pageURLs[0],\n      nextPageURL: pageURLs[1],\n      goNext: getNextPage,\n      goPrev: getPreviousPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pokemon, \"j/sf4f6vgOcjq0MzVd7s0q5qq6Y=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","PokemonCard","Footer","Gradients","Pokemon","baseURL","currentPageURL","setCurrentPageURL","pokemons","setPokemons","modal","setModal","pageURLs","setPageURLs","selectedPokemonData","setSelectedPokemonData","fetchDetails","get","then","res","data","previous","next","requests","results","map","pokemon","url","Promise","all","window","scrollTo","toggleModalHandler","isSet","pokemonName","pokemonImage","backgroundColor","abilities","stats","height","weight","types","name","imageURL","getPreviousPage","document","getElementById","style","visibility","getNextPage","console","log","pokemonContainer","record","i","color","length","type","sprites","front_default"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"./pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst Pokemon = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [pageURLs, setPageURLs] = useState([]);\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  function fetchDetails() {\r\n\r\n    axios.get(currentPageURL).then((res) => {\r\n      setPageURLs([res.data.previous, res.data.next]);\r\n      let requests = res.data.results.map((pokemon) => {\r\n        return axios.get(pokemon.url);\r\n      });\r\n      return [Promise.all(requests)].then((data) => {\r\n        setPokemons(data);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchDetails();\r\n  }, [currentPageURL]);\r\n\r\n  const toggleModalHandler = (\r\n    isSet,\r\n    pokemonName,\r\n    pokemonImage,\r\n    backgroundColor,\r\n    abilities,\r\n    stats,\r\n    height,\r\n    weight,\r\n    types\r\n  ) => {\r\n    // The below setStates are batched together.\r\n    setSelectedPokemonData({\r\n      ...selectedPokemonData,\r\n      name: pokemonName,\r\n      imageURL: pokemonImage,\r\n      backgroundColor: backgroundColor,\r\n      abilities: abilities,\r\n      stats: stats,\r\n      height: height,\r\n      weight: weight,\r\n      types: types,\r\n    });\r\n    setModal(isSet);\r\n  };\r\n  const getPreviousPage = () => {\r\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);\r\n    else document.getElementById(\"pre\").style.visibility = \"hidden\";\r\n  };\r\n  const getNextPage = () => {\r\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);\r\n    else setCurrentPageURL(baseURL);\r\n  };\r\n  console.log(selectedPokemonData);\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      <div className={classes.pokemonContainer}>\r\n        {!modal &&\r\n          pokemons.map((record, i) => {\r\n            let color = Gradients(record.data.types);\r\n            if (record.data.types.length === 2) {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[1].type.name,\r\n                record.data.types.length\r\n              );\r\n            } else {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[0].type.name,\r\n                record.data.types.length\r\n              );\r\n            }\r\n\r\n            return (\r\n              <PokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    record.data.name,\r\n                    record.data.sprites.front_default,\r\n                    color,\r\n                    record.data.abilities,\r\n                    record.data.stats,\r\n                    record.data.height,\r\n                    record.data.weight,\r\n                    record.data.types\r\n                  )\r\n                }\r\n                types={record.data.types}\r\n                name={record.data.name}\r\n                image={record.data.sprites.front_default}\r\n                types={record.data.types}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && (\r\n        <Footer\r\n          modal={modal}\r\n          previousPageURL={pageURLs[0]}\r\n          nextPageURL={pageURLs[1]}\r\n          goNext={getNextPage}\r\n          goPrev={getPreviousPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Pokemon;\r\n"]},"metadata":{},"sourceType":"module"}