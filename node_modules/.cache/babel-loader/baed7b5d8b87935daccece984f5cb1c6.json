{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal'; // import SpinnerModal from '../SpinnerModal/SpinnerModal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [previousPageURL, setPreviousPageURL] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [selectedPokemon, setSelectedPokemon] = useState('');\n  const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState('');\n  const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios.get(currentPageURL).then(res => {\n      setPreviousPageURL(res.data.previous);\n      setNextPageURL(res.data.next);\n      let requests = res.data.results.map(pokemon => {\n        return axios.get(pokemon.url);\n      });\n      Promise.all(requests).then(data => {\n        data.forEach(e => console.log());\n        setPokemons(data);\n      });\n    });\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\n    setSelectedPokemon(pokemonName);\n    setSelectedPokemonImageURL(pokemonImage);\n    setModal(isSet);\n    axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName).then(res => selectedPokemonSetAbilities(res.data.abilities)).catch(err => console.log(err));\n  };\n\n  const getPreviousPage = () => {\n    if (previousPageURL) setCurrentPageURL(previousPageURL);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (nextPageURL) setCurrentPageURL(nextPageURL);else setCurrentPageURL(baseURL);\n  };\n\n  console.log(pokemons);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons.map((record, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridItem,\n          onClick: () => {\n            toggleModalHandler(true, record.data.name, record.data.sprites.front_default);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: record.data.sprites.front_default,\n            width: \"250\",\n            height: \"250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: record.data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      name: selectedPokemon,\n      pokemonImage: selectedPokemonImageURL,\n      abilities: selectedPokemonAbilities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.NavButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"pre\",\n          className: classes.Previous,\n          style: previousPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next\",\n          className: classes.Next,\n          style: nextPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"2gpYFVpT9ZfEqEnQ7hmPPcPv9Ac=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","Pokemon","baseURL","currentPageURL","setCurrentPageURL","nextPageURL","setNextPageURL","previousPageURL","setPreviousPageURL","pokemons","setPokemons","modal","setModal","selectedPokemon","setSelectedPokemon","selectedPokemonImageURL","setSelectedPokemonImageURL","selectedPokemonAbilities","selectedPokemonSetAbilities","window","scrollTo","get","then","res","data","previous","next","requests","results","map","pokemon","url","Promise","all","forEach","e","console","log","toggleModalHandler","isSet","pokemonName","pokemonImage","abilities","catch","err","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","record","i","gridItem","name","sprites","front_default","NavButtons","Previous","Next"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAG,mCAAhB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAACM,OAAD,CAApD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,uBAAD,EAA0BC,0BAA1B,IAAwDpB,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACqB,wBAAD,EAA2BC,2BAA3B,IAA0DtB,QAAQ,CAAC,EAAD,CAAxE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA1B,IAAAA,KAAK,CAAC2B,GAAN,CAAUlB,cAAV,EACCmB,IADD,CACMC,GAAG,IAAI;AACTf,MAAAA,kBAAkB,CAACe,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAlB;AACAnB,MAAAA,cAAc,CAACiB,GAAG,CAACC,IAAJ,CAASE,IAAV,CAAd;AACA,UAAIC,QAAQ,GAAGJ,GAAG,CAACC,IAAJ,CAASI,OAAT,CAAiBC,GAAjB,CAAqBC,OAAO,IAAE;AACzC,eAAOpC,KAAK,CAAC2B,GAAN,CAAUS,OAAO,CAACC,GAAlB,CAAP;AACH,OAFc,CAAf;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EACCL,IADD,CACME,IAAI,IAAE;AACRA,QAAAA,IAAI,CAACU,OAAL,CAAaC,CAAC,IAAEC,OAAO,CAACC,GAAR,EAAhB;AACA3B,QAAAA,WAAW,CAACc,IAAD,CAAX;AACH,OAJD;AAKH,KAZD;AAaH,GAhBQ,EAgBN,CAACrB,cAAD,CAhBM,CAAT;;AAkBA,QAAMmC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,YAArB,KAAsC;AAE7D3B,IAAAA,kBAAkB,CAAC0B,WAAD,CAAlB;AACAxB,IAAAA,0BAA0B,CAACyB,YAAD,CAA1B;AACA7B,IAAAA,QAAQ,CAAC2B,KAAD,CAAR;AACA7C,IAAAA,KAAK,CAAC2B,GAAN,CAAU,uCAAuCmB,WAAjD,EACClB,IADD,CACMC,GAAG,IAAIL,2BAA2B,CAACK,GAAG,CAACC,IAAJ,CAASkB,SAAV,CADxC,EAECC,KAFD,CAEOC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAFd;AAIH,GATD;;AAUA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAGtC,eAAH,EAAoBH,iBAAiB,CAACG,eAAD,CAAjB,CAApB,KACKuC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,UAArC,GAAkD,QAAlD;AACR,GAHD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAG7C,WAAH,EAAgBD,iBAAiB,CAACC,WAAD,CAAjB,CAAhB,KACKD,iBAAiB,CAACF,OAAD,CAAjB;AACR,GAHD;;AAIAkC,EAAAA,OAAO,CAACC,GAAR,CAAY5B,QAAZ;AACA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACqD,gBAAxB;AAAA,gBACK,CAACxC,KAAD,IAAUF,QAAQ,CAACoB,GAAT,CAAa,CAACuB,MAAD,EAASC,CAAT,KAAa;AACjC,4BACI;AAAa,UAAA,SAAS,EAAEvD,OAAO,CAACwD,QAAhC;AAA0C,UAAA,OAAO,EAAE,MAAI;AAAChB,YAAAA,kBAAkB,CAAC,IAAD,EAAOc,MAAM,CAAC5B,IAAP,CAAY+B,IAAnB,EAAyBH,MAAM,CAAC5B,IAAP,CAAYgC,OAAZ,CAAoBC,aAA7C,CAAlB;AAA8E,WAAtI;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEL,MAAM,CAAC5B,IAAP,CAAYgC,OAAZ,CAAoBC,aAA9B;AAA6C,YAAA,KAAK,EAAC,KAAnD;AAAyD,YAAA,MAAM,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIL,MAAM,CAAC5B,IAAP,CAAY+B;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARU;AADf;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcK1C,KAAK,iBACF,QAAC,KAAD;AAAO,MAAA,WAAW,EAAE2B,kBAApB;AAAwC,MAAA,IAAI,EAAEzB,eAA9C;AACA,MAAA,YAAY,EAAEE,uBADd;AAEA,MAAA,SAAS,EAAEE;AAFX;AAAA;AAAA;AAAA;AAAA,YAfR,eAmBI;AAAQ,MAAA,SAAS,EAAEnB,OAAO,CAAC4D,UAA3B;AAAA,8BACI;AAAA,kBACK,CAAC/C,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAiB,UAAA,SAAS,EAAEb,OAAO,CAAC6D,QAApC;AACA,UAAA,KAAK,EAAEpD,eAAe,GAAE;AAAC0C,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WADhD;AAEA,UAAA,OAAO,EAAIJ,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACK,CAAClC,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,SAAS,EAAEb,OAAO,CAAC8D,IAArC;AACA,UAAA,KAAK,EAAEvD,WAAW,GAAE;AAAC4C,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WAD5C;AAEA,UAAA,OAAO,EAAIC,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CAzFD;;GAAMjD,O;;KAAAA,O;AA0FN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\n// import SpinnerModal from '../SpinnerModal/SpinnerModal';\r\n\r\n\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n    const [nextPageURL, setNextPageURL] = useState('');\r\n    const [previousPageURL, setPreviousPageURL] = useState('');\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState('');\r\n    const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState(''); \r\n    const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n            setPreviousPageURL(res.data.previous);\r\n            setNextPageURL(res.data.next);\r\n            let requests = res.data.results.map(pokemon=>{\r\n                return axios.get(pokemon.url)\r\n            })\r\n            Promise.all(requests)\r\n            .then(data=>{\r\n                data.forEach(e=>console.log())\r\n                setPokemons(data);\r\n            })\r\n        })\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\r\n\r\n        setSelectedPokemon(pokemonName);\r\n        setSelectedPokemonImageURL(pokemonImage); \r\n        setModal(isSet);\r\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName)\r\n        .then(res => selectedPokemonSetAbilities(res.data.abilities))\r\n        .catch(err => console.log(err));\r\n       \r\n    }\r\n    const getPreviousPage = () => {\r\n        if(previousPageURL) setCurrentPageURL(previousPageURL);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(nextPageURL) setCurrentPageURL(nextPageURL);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n    console.log(pokemons)\r\n    return (\r\n        <div>   \r\n            <Navbar/>\r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons.map((record, i)=>{\r\n                    return (\r\n                        <div key={i} className={classes.gridItem} onClick={()=>{toggleModalHandler(true, record.data.name, record.data.sprites.front_default)}}>\r\n                            <img src={record.data.sprites.front_default} width=\"250\" height=\"250\"></img>\r\n                            <p>{record.data.name}</p>\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} name={selectedPokemon} \r\n                pokemonImage={selectedPokemonImageURL}\r\n                abilities={selectedPokemonAbilities}/>}\r\n            \r\n            <footer className={classes.NavButtons}>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"pre\" className={classes.Previous}\r\n                    style={previousPageURL? {visibility:'visible'}: {visibility: 'hidden'}}\r\n                    onClick = {getPreviousPage}>\r\n                        Previous\r\n                    </button>}\r\n                </div>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"next\" className={classes.Next}\r\n                    style={nextPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n                    onClick = {getNextPage}>\r\n                        Next\r\n                    </button>}   \r\n                </div>\r\n            </footer>  \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}