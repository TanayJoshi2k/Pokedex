{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal'; // import SpinnerModal from '../SpinnerModal/SpinnerModal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [previousPageURL, setPreviousPageURL] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [selectedPokemon, setSelectedPokemon] = useState('');\n  const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState('');\n  const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios.get(currentPageURL).then(res => {\n      setPreviousPageURL(res.data.previous);\n      setNextPageURL(res.data.next);\n      return res.data.results;\n    }).then(data => {\n      let requests = data.map(pokemon => {\n        return axios.get(pokemon.url);\n      });\n      let pokeData = Promise.all(requests).then(data => {\n        return data;\n      });\n      pokeData.then(data => {\n        setPokemons(data);\n      });\n    }); // .then(data=>{\n    //     console.log(data)\n    //     let types = data.results.map((pokemon, idx) => {\n    //         let p = pokemon.url.split(\"/\");\n    //         let img_idx = p[p.length - 2];\n    //         let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\n    //         let getTypesURL = baseURL + \"/\" + img_idx.toString();\n    //         return [img_idx, source, getTypesURL, pokemon.name];\n    //         }\n    //     )\n    //     return types;\n    // })\n    // .then(data=>{\n    //     let URLs = data.map(element =>  element[2])\n    //     let requests = URLs.map((url) => {\n    //         return axios.get(url);\n    //       });   \n    //     Promise.all(requests)\n    //     .then((res) => {\n    //         let types = res.map(e=>{\n    //             return e.data.types\n    //         })\n    //         setPokemons(data.map(element => {\n    //             let image = <img src={element[1]} height=\"250\" width=\"250\" alt=\"...\"></img>;\n    //             return (\n    //                 <div className={classes.gridItem} onClick={()=>{toggleModalHandler(true, element[3], element[1])}}>\n    //                     {image}\n    //                     {<p>{element[3]}</p>}\n    //                 </div>\n    //                 )\n    //             }));\n    //      }).catch((err) => {\n    //         console.log(err)\n    //      });\n    // })\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\n    setSelectedPokemon(pokemonName);\n    setSelectedPokemonImageURL(pokemonImage);\n    setModal(isSet);\n    axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName).then(res => selectedPokemonSetAbilities(res.data.abilities)).catch(err => console.log(err));\n  };\n\n  const getPreviousPage = () => {\n    if (previousPageURL) setCurrentPageURL(previousPageURL);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (nextPageURL) setCurrentPageURL(nextPageURL);else setCurrentPageURL(baseURL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      name: selectedPokemon,\n      pokemonImage: selectedPokemonImageURL,\n      abilities: selectedPokemonAbilities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.NavButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"pre\",\n          className: classes.Previous,\n          style: previousPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next\",\n          className: classes.Next,\n          style: nextPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"qwkJENtfvObWDPQXt+RLbZvVppc=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","Pokemon","baseURL","currentPageURL","setCurrentPageURL","nextPageURL","setNextPageURL","previousPageURL","setPreviousPageURL","pokemons","setPokemons","modal","setModal","selectedPokemon","setSelectedPokemon","selectedPokemonImageURL","setSelectedPokemonImageURL","selectedPokemonAbilities","selectedPokemonSetAbilities","counter","setCounter","window","scrollTo","get","then","res","data","previous","next","results","requests","map","pokemon","url","pokeData","Promise","all","toggleModalHandler","isSet","pokemonName","pokemonImage","abilities","catch","err","console","log","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","NavButtons","Previous","Next"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\n// import SpinnerModal from '../SpinnerModal/SpinnerModal';\r\n\r\n\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n    const [nextPageURL, setNextPageURL] = useState('');\r\n    const [previousPageURL, setPreviousPageURL] = useState('');\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState('');\r\n    const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState(''); \r\n    const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n            setPreviousPageURL(res.data.previous);\r\n            setNextPageURL(res.data.next);\r\n            return res.data.results;\r\n        })\r\n        .then(data => {\r\n        \r\n            let requests = data.map(pokemon=>{\r\n                return axios.get(pokemon.url)\r\n            })\r\n            let pokeData = Promise.all(requests)\r\n            .then(data=>{\r\n                return data\r\n            })\r\n            pokeData.then(data=>{\r\n                setPokemons(data)\r\n            })\r\n        })\r\n        // .then(data=>{\r\n        //     console.log(data)\r\n        //     let types = data.results.map((pokemon, idx) => {\r\n            \r\n        //         let p = pokemon.url.split(\"/\");\r\n        //         let img_idx = p[p.length - 2];\r\n        //         let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\r\n        //         let getTypesURL = baseURL + \"/\" + img_idx.toString();\r\n        //         return [img_idx, source, getTypesURL, pokemon.name];\r\n        //         }\r\n        //     )\r\n        //     return types;\r\n        // })\r\n        // .then(data=>{\r\n        //     let URLs = data.map(element =>  element[2])\r\n        //     let requests = URLs.map((url) => {\r\n        //         return axios.get(url);\r\n        //       });   \r\n\r\n        //     Promise.all(requests)\r\n        //     .then((res) => {\r\n        //         let types = res.map(e=>{\r\n        //             return e.data.types\r\n        //         })\r\n  \r\n        //         setPokemons(data.map(element => {\r\n        //             let image = <img src={element[1]} height=\"250\" width=\"250\" alt=\"...\"></img>;\r\n\r\n        //             return (\r\n        //                 <div className={classes.gridItem} onClick={()=>{toggleModalHandler(true, element[3], element[1])}}>\r\n        //                     {image}\r\n        //                     {<p>{element[3]}</p>}\r\n\r\n        //                 </div>\r\n        //                 )\r\n        //             }));\r\n    \r\n        //      }).catch((err) => {\r\n        //         console.log(err)\r\n        //      });\r\n        // })\r\n\r\n\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\r\n\r\n        setSelectedPokemon(pokemonName);\r\n        setSelectedPokemonImageURL(pokemonImage); \r\n        setModal(isSet);\r\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName)\r\n        .then(res => selectedPokemonSetAbilities(res.data.abilities))\r\n        .catch(err => console.log(err));\r\n       \r\n    }\r\n    const getPreviousPage = () => {\r\n        if(previousPageURL) setCurrentPageURL(previousPageURL);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(nextPageURL) setCurrentPageURL(nextPageURL);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>   \r\n\r\n            <Navbar/>\r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} name={selectedPokemon} \r\n                pokemonImage={selectedPokemonImageURL}\r\n                abilities={selectedPokemonAbilities}/>}\r\n            \r\n            <footer className={classes.NavButtons}>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"pre\" className={classes.Previous}\r\n                    style={previousPageURL? {visibility:'visible'}: {visibility: 'hidden'}}\r\n                    onClick = {getPreviousPage}>\r\n                        Previous\r\n                    </button>}\r\n                </div>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"next\" className={classes.Next}\r\n                    style={nextPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n                    onClick = {getNextPage}>\r\n                        Next\r\n                    </button>}   \r\n                </div>\r\n            </footer>  \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}