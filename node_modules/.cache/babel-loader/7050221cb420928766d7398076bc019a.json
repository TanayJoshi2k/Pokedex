{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Spinner from '../Spinner';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [previousPageURL, setPreviousPageURL] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [modal, setModal] = useState(false);\n  const [selectedPokemon, setSelectedPokemon] = useState('');\n  const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    document;\n    axios.get(currentPageURL).then(res => {\n      setPreviousPageURL(res.data.previous);\n      setNextPageURL(res.data.next);\n      setPokemons(res.data.results.map((pokemon, idx) => {\n        let p = pokemon.url.split(\"/\");\n        let img_idx = p[p.length - 2];\n        let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\n\n        let image = /*#__PURE__*/_jsxDEV(\"img\", {\n          src: source,\n          height: \"250\",\n          width: \"250\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridItem,\n          onClick: () => {\n            toggleModalHandler(true, pokemon.name, source);\n          },\n          children: [image, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this);\n      }));\n    }).then(() => setLoading(false));\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\n    setSelectedPokemon(pokemonName);\n    setSelectedPokemonImageURL(pokemonImage);\n    setModal(isSet);\n  };\n\n  const getPreviousPage = () => {\n    if (previousPageURL) setCurrentPageURL(previousPageURL);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (nextPageURL) setCurrentPageURL(nextPageURL);else setCurrentPageURL(baseURL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: previousPageURL ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      },\n      onClick: getPreviousPage,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this), !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: nextPageURL ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      },\n      onClick: getNextPage,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      name: selectedPokemon,\n      pokemonImage: selectedPokemonImageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"G588VUyJSO1v2dAATE1QVeZns8k=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Spinner","Navbar","Modal","Pokemon","baseURL","currentPageURL","setCurrentPageURL","nextPageURL","setNextPageURL","previousPageURL","setPreviousPageURL","pokemons","setPokemons","loading","setLoading","modal","setModal","selectedPokemon","setSelectedPokemon","selectedPokemonImageURL","setSelectedPokemonImageURL","document","get","then","res","data","previous","next","results","map","pokemon","idx","p","url","split","img_idx","length","source","toString","image","gridItem","toggleModalHandler","name","charAt","toUpperCase","slice","isSet","pokemonName","pokemonImage","getPreviousPage","getElementById","style","visibility","getNextPage","pokemonContainer"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Spinner from '../Spinner';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\nconst Pokemon = () => {\r\n\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n    const [nextPageURL, setNextPageURL] = useState('');\r\n    const [previousPageURL, setPreviousPageURL] = useState('');\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState('');\r\n    const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState(''); \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        document\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n\r\n            setPreviousPageURL(res.data.previous);\r\n            setNextPageURL(res.data.next);\r\n            setPokemons(res.data.results.map((pokemon, idx) => {\r\n\r\n            let p = pokemon.url.split(\"/\");\r\n            let img_idx = p[p.length - 2];\r\n            let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\r\n            let image = <img src={source} height=\"250\" width=\"250\"></img>;\r\n            return (\r\n                <div className={classes.gridItem} onClick={()=>{toggleModalHandler(true, pokemon.name, source)}}>\r\n                    {image}\r\n                    <p key={idx}>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</p>\r\n                </div>\r\n                )\r\n            }));\r\n        }).then(() => setLoading(false))\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\r\n\r\n        setSelectedPokemon(pokemonName);\r\n        setSelectedPokemonImageURL(pokemonImage); \r\n        setModal(isSet);\r\n    }\r\n    const getPreviousPage = () => {\r\n        if(previousPageURL) setCurrentPageURL(previousPageURL);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(nextPageURL) setCurrentPageURL(nextPageURL);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n    return (\r\n        <div>   \r\n\r\n            <Navbar/>\r\n            \r\n            {!modal && <button style={previousPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n            onClick = {getPreviousPage}>Previous</button>}\r\n\r\n            {!modal && <button style={nextPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n            onClick = {getNextPage}>Next</button>}\r\n      \r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} name={selectedPokemon} \r\n                pokemonImage={selectedPokemonImageURL}/>}\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}