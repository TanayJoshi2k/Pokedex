{"ast":null,"code":"import _defineProperty from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{useState,useEffect}from\"react\";import classes from\"../Pokemon/pokemon.module.css\";import Navbar from\"../Navbar/Navbar\";import Modal from\"../Modal/Modal\";import PokemonCard from\"../PokemonCard/PokemonCard\";import Footer from\"../Footer/Footer\";import Gradients from\"../Gradients/Gradients\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PokemonLazyLoad=function PokemonLazyLoad(){var baseURL=\"https://pokeapi.co/api/v2/pokemon/\";var _useState=useState(0),_useState2=_slicedToArray(_useState,2),offset=_useState2[0],setOffset=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemons=_useState4[0],setPokemons=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),selectedPokemonData=_useState6[0],setSelectedPokemonData=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),modal=_useState8[0],setModal=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isFetching=_useState10[0],setIsFetching=_useState10[1];var getPosts=function getPosts(offset,limit){axios.get(baseURL+\"?offset=\".concat(offset,\"&limit=\").concat(limit)).then(function(res){var requests=res.data.results.map(function(pokemon){return axios.get(pokemon.url);});return Promise.all(requests).then(function(data){setPokemons([].concat(_toConsumableArray(pokemons),_toConsumableArray(data)));setIsFetching(false);});}).catch(function(err){return console.log(err);});};var getMorePosts=function getMorePosts(){getPosts(offset,offset+20);};var handleScroll=function handleScroll(){if(window.innerHeight+document.documentElement.scrollTop!==document.documentElement.offsetHeight)return;setOffset(function(prevOffset){return prevOffset+20;});setIsFetching(true);};useEffect(function(){window.addEventListener(\"scroll\",handleScroll);return function(){return window.removeEventListener(\"scroll\",handleScroll);};},[]);useEffect(function(){getPosts(offset,offset+20);},[]);useEffect(function(){if(!isFetching)return;else getMorePosts();},[isFetching]);var toggleModalHandler=function toggleModalHandler(isSet,pokemonName,pokemonImage,backgroundColor,abilities,stats,height,weight,types){// The below setStates are batched together.\nsetSelectedPokemonData(_objectSpread(_objectSpread({},selectedPokemonData),{},{name:pokemonName,imageURL:pokemonImage,backgroundColor:backgroundColor,abilities:abilities,stats:stats,height:height,weight:weight,types:types}));setModal(isSet);};return/*#__PURE__*/_jsxs(\"div\",{children:[!modal&&/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.pokemonContainer,children:!modal&&pokemons.flat().map(function(record,i){var color=Gradients(record.data.types);if(record.data.types.length===2){color=Gradients(record.data.types[0].type.name,record.data.types[1].type.name,record.data.types.length);}else{color=Gradients(record.data.types[0].type.name,record.data.types[0].type.name,record.data.types.length);}return/*#__PURE__*/_jsx(PokemonCard,_defineProperty({toggleModal:function toggleModal(){return toggleModalHandler(true,record.data.name,record.data.sprites.front_default,color,record.data.abilities,record.data.stats,record.data.height,record.data.weight,record.data.types);},types:record.data.types,name:record.data.name,image:record.data.sprites.front_default},\"types\",record.data.types));})}),modal&&/*#__PURE__*/_jsx(Modal,{toggleModal:toggleModalHandler,backgroundColor:selectedPokemonData[\"backgroundColor\"],name:selectedPokemonData[\"name\"],pokemonImage:selectedPokemonData[\"imageURL\"],abilities:selectedPokemonData[\"abilities\"],stats:selectedPokemonData[\"stats\"],height:selectedPokemonData[\"height\"],weight:selectedPokemonData[\"weight\"],types:selectedPokemonData[\"types\"]}),!modal&&/*#__PURE__*/_jsx(Footer,{modal:modal})]});};export default PokemonLazyLoad;","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/PokemonLazyLoad/PokemonLazyLoad.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","PokemonCard","Footer","Gradients","PokemonLazyLoad","baseURL","offset","setOffset","pokemons","setPokemons","selectedPokemonData","setSelectedPokemonData","modal","setModal","isFetching","setIsFetching","getPosts","limit","get","then","res","requests","data","results","map","pokemon","url","Promise","all","catch","err","console","log","getMorePosts","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevOffset","addEventListener","removeEventListener","toggleModalHandler","isSet","pokemonName","pokemonImage","backgroundColor","abilities","stats","height","weight","types","name","imageURL","pokemonContainer","flat","record","i","color","length","type","sprites","front_default"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"../Pokemon/pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst PokemonLazyLoad = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n  const [offset, setOffset] = useState(0);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const getPosts = (offset, limit) => {\r\n    axios\r\n      .get(baseURL + `?offset=${offset}&limit=${limit}`)\r\n      .then((res) => {\r\n        let requests = res.data.results.map((pokemon) => {\r\n          return axios.get(pokemon.url);\r\n        });\r\n        return Promise.all(requests).then((data) => {\r\n          setPokemons([...pokemons, ...data]);\r\n          setIsFetching(false)\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  \r\n  const getMorePosts= () => {\r\n    getPosts(offset, offset+20);\r\n}\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    )\r\n      return;\r\n      setOffset(prevOffset => prevOffset+20)\r\n    setIsFetching(true);\r\n  }; \r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPosts(offset, offset+20);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    else getMorePosts();\r\n  }, [isFetching]);\r\n  const toggleModalHandler = (\r\n    isSet,\r\n    pokemonName,\r\n    pokemonImage,\r\n    backgroundColor,\r\n    abilities,\r\n    stats,\r\n    height,\r\n    weight,\r\n    types\r\n  ) => {\r\n    // The below setStates are batched together.\r\n    setSelectedPokemonData({\r\n      ...selectedPokemonData,\r\n      name: pokemonName,\r\n      imageURL: pokemonImage,\r\n      backgroundColor: backgroundColor,\r\n      abilities: abilities,\r\n      stats: stats,\r\n      height: height,\r\n      weight: weight,\r\n      types: types,\r\n    });\r\n    setModal(isSet);\r\n  };\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      <div className={classes.pokemonContainer}>\r\n        {!modal &&\r\n          pokemons.flat().map((record, i) => {\r\n            let color = Gradients(record.data.types);\r\n            if (record.data.types.length === 2) {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[1].type.name,\r\n                record.data.types.length\r\n              );\r\n            } else {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[0].type.name,\r\n                record.data.types.length\r\n              );\r\n            }\r\n\r\n            return (\r\n              <PokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    record.data.name,\r\n                    record.data.sprites.front_default,\r\n                    color,\r\n                    record.data.abilities,\r\n                    record.data.stats,\r\n                    record.data.height,\r\n                    record.data.weight,\r\n                    record.data.types\r\n                  )\r\n                }\r\n                types={record.data.types}\r\n                name={record.data.name}\r\n                image={record.data.sprites.front_default}\r\n                types={record.data.types}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && (\r\n        <Footer\r\n          modal={modal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonLazyLoad;\r\n"]},"metadata":{},"sourceType":"module"}