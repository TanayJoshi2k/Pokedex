{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\PokemonLazyLoad\\\\PokemonLazyLoad.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"../Pokemon/pokemon.module.css\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Modal from \"../Modal/Modal\";\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\nimport Footer from \"../Footer/Footer\";\nimport Gradients from \"../Gradients/Gradients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonLazyLoad = () => {\n  _s();\n\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\n  const limit = 20;\n  const [pokemons, setPokemons] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const getPosts = (offset, limit) => {\n    axios.get(baseURL + `?offset=${offset}&limit=${limit}`).then(res => {\n      let requests = res.data.results.map(pokemon => {\n        return axios.get(pokemon.url);\n      });\n      return Promise.all(requests).then(data => {\n        setPokemons(...pokemons, data);\n      });\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts(0, 10);\n  }, []); //   window.onscroll = function (ev) {\n  //     if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n  //       console.log(\"You're at the bottom of the page\")\n  //     }\n  //   };\n\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n    setIsFetching(true);\n  };\n\n  useEffect(() => {\n    if (!isFetching) return;else gt;\n  }, [isFetching]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: pokemons.map((record, i) => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          types: record.data.types,\n          name: record.data.name,\n          image: record.data.sprites.front_default,\n          types: record.data.types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonLazyLoad, \"kC6ZwDEnVY/9JKQixAern0ia1NI=\");\n\n_c = PokemonLazyLoad;\nexport default PokemonLazyLoad;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonLazyLoad\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/PokemonLazyLoad/PokemonLazyLoad.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","PokemonCard","Footer","Gradients","PokemonLazyLoad","baseURL","limit","pokemons","setPokemons","isFetching","setIsFetching","getPosts","offset","get","then","res","requests","data","results","map","pokemon","url","Promise","all","catch","err","console","log","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","gt","pokemonContainer","record","i","types","name","sprites","front_default"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAG,oCAAhB;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMe,QAAQ,GAAG,CAACC,MAAD,EAASN,KAAT,KAAmB;AAClCZ,IAAAA,KAAK,CACFmB,GADH,CACOR,OAAO,GAAI,WAAUO,MAAO,UAASN,KAAM,EADlD,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACb,UAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAsBC,OAAD,IAAa;AAC/C,eAAO1B,KAAK,CAACmB,GAAN,CAAUO,OAAO,CAACC,GAAlB,CAAP;AACD,OAFc,CAAf;AAGA,aAAOC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBF,IAAtB,CAA4BG,IAAD,IAAU;AAC1CT,QAAAA,WAAW,CAAC,GAAGD,QAAJ,EAAcU,IAAd,CAAX;AACD,OAFM,CAAP;AAGD,KATH,EAUGO,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZD;;AAcA5B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAAC,CAAD,EAAI,EAAJ,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CApB4B,CAuB9B;AACA;AACA;AACA;AACA;;AACE,QAAMiB,YAAY,GAAG,MAAM;AACvB,QACIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KACAF,QAAQ,CAACC,eAAT,CAAyBE,YAF7B,EAGI;AACFxB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACL,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAK;AACb,QAAG,CAACY,UAAJ,EAAgB,OAAhB,KACK0B,EAAE;AACR,GAHQ,EAGP,CAAC1B,UAAD,CAHO,CAAT;AAOA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACsC,gBAAxB;AAAA,gBACG7B,QAAQ,CAACY,GAAT,CAAa,CAACkB,MAAD,EAASC,CAAT,KAAe;AAC3B,4BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAED,MAAM,CAACpB,IAAP,CAAYsB,KADrB;AAEE,UAAA,IAAI,EAAEF,MAAM,CAACpB,IAAP,CAAYuB,IAFpB;AAGE,UAAA,KAAK,EAAEH,MAAM,CAACpB,IAAP,CAAYwB,OAAZ,CAAoBC,aAH7B;AAIE,UAAA,KAAK,EAAEL,MAAM,CAACpB,IAAP,CAAYsB;AAJrB;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3DD;;GAAMnC,e;;KAAAA,e;AA6DN,eAAeA,eAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"../Pokemon/pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst PokemonLazyLoad = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n  const limit = 20;\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  \r\n  const getPosts = (offset, limit) => {\r\n    axios\r\n      .get(baseURL + `?offset=${offset}&limit=${limit}`)\r\n      .then((res) => {\r\n        let requests = res.data.results.map((pokemon) => {\r\n          return axios.get(pokemon.url);\r\n        });\r\n        return Promise.all(requests).then((data) => {\r\n          setPokemons(...pokemons, data);\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts(0, 10);\r\n  }, []);\r\n//   window.onscroll = function (ev) {\r\n//     if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\r\n//       console.log(\"You're at the bottom of the page\")\r\n//     }\r\n//   };\r\n  const handleScroll = () => {\r\n      if (\r\n          window.innerHeight + document.documentElement.scrollTop  !==\r\n          document.documentElement.offsetHeight\r\n        ) return;\r\n        setIsFetching(true);\r\n  }\r\n\r\n  useEffect(()=> {\r\n    if(!isFetching) return\r\n    else gt\r\n  },[isFetching])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.pokemonContainer}>\r\n        {pokemons.map((record, i) => {\r\n          return (\r\n            <PokemonCard\r\n              types={record.data.types}\r\n              name={record.data.name}\r\n              image={record.data.sprites.front_default}\r\n              types={record.data.types}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonLazyLoad;\r\n"]},"metadata":{},"sourceType":"module"}