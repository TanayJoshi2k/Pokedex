{"ast":null,"code":"import _defineProperty from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Prashant Joshi/pokemon/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{useState,useEffect}from\"react\";import classes from\"./pokemon.module.css\";import Navbar from\"../Navbar/Navbar\";import Modal from\"../Modal/Modal\";import PokemonCard from\"../PokemonCard/PokemonCard\";import Footer from\"../Footer/Footer\";import Gradients from\"../Gradients/Gradients\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Pokemon=function Pokemon(){var baseURL=\"https://pokeapi.co/api/v2/pokemon\";var _useState=useState(baseURL),_useState2=_slicedToArray(_useState,2),currentPageURL=_useState2[0],setCurrentPageURL=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemons=_useState4[0],setPokemons=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modal=_useState6[0],setModal=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),pageURLs=_useState8[0],setPageURLs=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),selectedPokemonData=_useState10[0],setSelectedPokemonData=_useState10[1];function fetchDetails(){axios.get(currentPageURL).then(function(res){setPageURLs([res.data.previous,res.data.next]);var requests=res.data.results.map(function(pokemon){return axios.get(pokemon.url);});return Promise.all(requests).then(function(data){setPokemons(data);});});}useEffect(function(){window.scrollTo(0,0);fetchDetails();},[currentPageURL]);var toggleModalHandler=function toggleModalHandler(isSet,pokemonName,pokemonImage,backgroundColor,abilities,stats,height,weight,types){// The below setStates are batched together.\nsetSelectedPokemonData(_objectSpread(_objectSpread({},selectedPokemonData),{},{name:pokemonName,imageURL:pokemonImage,backgroundColor:backgroundColor,abilities:abilities,stats:stats,height:height,weight:weight,types:types}));setModal(isSet);};var getPreviousPage=function getPreviousPage(){if(pageURLs[0])setCurrentPageURL(pageURLs[0]);else document.getElementById(\"pre\").style.visibility=\"hidden\";};var getNextPage=function getNextPage(){if(pageURLs[1])setCurrentPageURL(pageURLs[1]);else setCurrentPageURL(baseURL);};return/*#__PURE__*/_jsxs(\"div\",{children:[!modal&&/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.pokemonContainer,children:!modal&&pokemons.map(function(record,i){var color=Gradients(record.data.types);if(record.data.types.length===2){color=Gradients(record.data.types[0].type.name,record.data.types[1].type.name,record.data.types.length);}else{color=Gradients(record.data.types[0].type.name,record.data.types[0].type.name,record.data.types.length);}return/*#__PURE__*/_jsx(PokemonCard,_defineProperty({toggleModal:function toggleModal(){return toggleModalHandler(true,record.data.name,record.data.sprites.front_default,color,record.data.abilities,record.data.stats,record.data.height,record.data.weight,record.data.types);},types:record.data.types,name:record.data.name,image:record.data.sprites.front_default},\"types\",record.data.types));})}),modal&&/*#__PURE__*/_jsx(Modal,{toggleModal:toggleModalHandler,backgroundColor:selectedPokemonData[\"backgroundColor\"],name:selectedPokemonData[\"name\"],pokemonImage:selectedPokemonData[\"imageURL\"],abilities:selectedPokemonData[\"abilities\"],stats:selectedPokemonData[\"stats\"],height:selectedPokemonData[\"height\"],weight:selectedPokemonData[\"weight\"],types:selectedPokemonData[\"types\"]}),!modal&&/*#__PURE__*/_jsx(Footer,{modal:modal,previousPageURL:pageURLs[0],nextPageURL:pageURLs[1],goNext:getNextPage,goPrev:getPreviousPage})]});};export default Pokemon;","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","PokemonCard","Footer","Gradients","Pokemon","baseURL","currentPageURL","setCurrentPageURL","pokemons","setPokemons","modal","setModal","pageURLs","setPageURLs","selectedPokemonData","setSelectedPokemonData","fetchDetails","get","then","res","data","previous","next","requests","results","map","pokemon","url","Promise","all","window","scrollTo","toggleModalHandler","isSet","pokemonName","pokemonImage","backgroundColor","abilities","stats","height","weight","types","name","imageURL","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","record","i","color","length","type","sprites","front_default"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"./pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst Pokemon = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [pageURLs, setPageURLs] = useState([]);\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  function fetchDetails() {\r\n\r\n    axios.get(currentPageURL).then((res) => {\r\n      setPageURLs([res.data.previous, res.data.next]);\r\n      let requests = res.data.results.map((pokemon) => {\r\n        return axios.get(pokemon.url);\r\n      });\r\n      return Promise.all(requests).then((data) => {\r\n        setPokemons(data);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchDetails();\r\n  }, [currentPageURL]);\r\n\r\n  const toggleModalHandler = (\r\n    isSet,\r\n    pokemonName,\r\n    pokemonImage,\r\n    backgroundColor,\r\n    abilities,\r\n    stats,\r\n    height,\r\n    weight,\r\n    types\r\n  ) => {\r\n    // The below setStates are batched together.\r\n    setSelectedPokemonData({\r\n      ...selectedPokemonData,\r\n      name: pokemonName,\r\n      imageURL: pokemonImage,\r\n      backgroundColor: backgroundColor,\r\n      abilities: abilities,\r\n      stats: stats,\r\n      height: height,\r\n      weight: weight,\r\n      types: types,\r\n    });\r\n    setModal(isSet);\r\n  };\r\n  const getPreviousPage = () => {\r\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);\r\n    else document.getElementById(\"pre\").style.visibility = \"hidden\";\r\n  };\r\n  const getNextPage = () => {\r\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);\r\n    else setCurrentPageURL(baseURL);\r\n  };\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      <div className={classes.pokemonContainer}>\r\n        {!modal &&\r\n          pokemons.map((record, i) => {\r\n            let color = Gradients(record.data.types);\r\n            if (record.data.types.length === 2) {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[1].type.name,\r\n                record.data.types.length\r\n              );\r\n            } else {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[0].type.name,\r\n                record.data.types.length\r\n              );\r\n            }\r\n\r\n            return (\r\n              <PokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    record.data.name,\r\n                    record.data.sprites.front_default,\r\n                    color,\r\n                    record.data.abilities,\r\n                    record.data.stats,\r\n                    record.data.height,\r\n                    record.data.weight,\r\n                    record.data.types\r\n                  )\r\n                }\r\n                types={record.data.types}\r\n                name={record.data.name}\r\n                image={record.data.sprites.front_default}\r\n                types={record.data.types}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && (\r\n        <Footer\r\n          modal={modal}\r\n          previousPageURL={pageURLs[0]}\r\n          nextPageURL={pageURLs[1]}\r\n          goNext={getNextPage}\r\n          goPrev={getPreviousPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Pokemon;\r\n"]},"metadata":{},"sourceType":"module"}