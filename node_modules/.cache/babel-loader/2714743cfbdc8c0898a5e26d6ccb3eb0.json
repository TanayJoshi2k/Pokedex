{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prashant Joshi\\\\pokemon\\\\src\\\\Pokemon\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport classes from './pokemon.module.css';\nimport Navbar from '../Navbar/Navbar';\nimport Modal from '../Modal/Modal'; // import SpinnerModal from '../SpinnerModal/SpinnerModal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [previousPageURL, setPreviousPageURL] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [selectedPokemon, setSelectedPokemon] = useState('');\n  const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState('');\n  const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios.get(currentPageURL).then(res => {\n      setPreviousPageURL(res.data.previous);\n      setNextPageURL(res.data.next);\n      setPokemons(res.data.results.map((pokemon, idx) => {\n        let p = pokemon.url.split(\"/\");\n        let img_idx = p[p.length - 2];\n        let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\n        let getAbilitiesURL = baseURL + \"/\" + img_idx.toString();\n        axios.get(getAbilitiesURL).then(res => {\n          cres.data.types.map(type => console.log(type.ability.name));\n        }).catch(err => console.log(err));\n\n        let image = /*#__PURE__*/_jsxDEV(\"img\", {\n          src: source,\n          height: \"250\",\n          width: \"250\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridItem,\n          onClick: () => {\n            toggleModalHandler(true, pokemon.name, source);\n          },\n          children: [image, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this);\n      }));\n    });\n  }, [currentPageURL]);\n\n  const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\n    setSelectedPokemon(pokemonName);\n    setSelectedPokemonImageURL(pokemonImage);\n    setModal(isSet);\n    axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName).then(res => selectedPokemonSetAbilities(res.data.abilities)).catch(err => console.log(err));\n  };\n\n  const getPreviousPage = () => {\n    if (previousPageURL) setCurrentPageURL(previousPageURL);else document.getElementById('pre').style.visibility = 'hidden';\n  };\n\n  const getNextPage = () => {\n    if (nextPageURL) setCurrentPageURL(nextPageURL);else setCurrentPageURL(baseURL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pokemonContainer,\n      children: !modal && pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModalHandler,\n      name: selectedPokemon,\n      pokemonImage: selectedPokemonImageURL,\n      abilities: selectedPokemonAbilities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.NavButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"pre\",\n          className: classes.Previous,\n          style: previousPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !modal && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next\",\n          className: classes.Next,\n          style: nextPageURL ? {\n            visibility: 'visible'\n          } : {\n            visibility: 'hidden'\n          },\n          onClick: getNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"2gpYFVpT9ZfEqEnQ7hmPPcPv9Ac=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Prashant Joshi/pokemon/src/Pokemon/Pokemon.js"],"names":["axios","React","useState","useEffect","classes","Navbar","Modal","Pokemon","baseURL","currentPageURL","setCurrentPageURL","nextPageURL","setNextPageURL","previousPageURL","setPreviousPageURL","pokemons","setPokemons","modal","setModal","selectedPokemon","setSelectedPokemon","selectedPokemonImageURL","setSelectedPokemonImageURL","selectedPokemonAbilities","selectedPokemonSetAbilities","window","scrollTo","get","then","res","data","previous","next","results","map","pokemon","idx","p","url","split","img_idx","length","source","toString","getAbilitiesURL","cres","types","type","console","log","ability","name","catch","err","image","gridItem","toggleModalHandler","charAt","toUpperCase","slice","isSet","pokemonName","pokemonImage","abilities","getPreviousPage","document","getElementById","style","visibility","getNextPage","pokemonContainer","NavButtons","Previous","Next"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAG,mCAAhB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAACM,OAAD,CAApD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,uBAAD,EAA0BC,0BAA1B,IAAwDpB,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACqB,wBAAD,EAA2BC,2BAA3B,IAA0DtB,QAAQ,CAAC,EAAD,CAAxE;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA1B,IAAAA,KAAK,CAAC2B,GAAN,CAAUlB,cAAV,EACCmB,IADD,CACMC,GAAG,IAAI;AACTf,MAAAA,kBAAkB,CAACe,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAlB;AACAnB,MAAAA,cAAc,CAACiB,GAAG,CAACC,IAAJ,CAASE,IAAV,CAAd;AACAhB,MAAAA,WAAW,CAACa,GAAG,CAACC,IAAJ,CAASG,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAEnD,YAAIC,CAAC,GAAGF,OAAO,CAACG,GAAR,CAAYC,KAAZ,CAAkB,GAAlB,CAAR;AACA,YAAIC,OAAO,GAAGH,CAAC,CAACA,CAAC,CAACI,MAAF,GAAW,CAAZ,CAAf;AACA,YAAIC,MAAM,GAAG,8EAA8EF,OAAO,CAACG,QAAR,EAA9E,GAAmG,MAAhH;AACA,YAAIC,eAAe,GAAGpC,OAAO,GAAG,GAAV,GAAgBgC,OAAO,CAACG,QAAR,EAAtC;AACA3C,QAAAA,KAAK,CAAC2B,GAAN,CAAUiB,eAAV,EACChB,IADD,CACMC,GAAG,IAAI;AACbgB,UAAAA,IAAI,CAACf,IAAL,CAAUgB,KAAV,CAAgBZ,GAAhB,CAAoBa,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAaC,IAAzB,CAA5B;AACC,SAHD,EAICC,KAJD,CAIOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAJd;;AAKA,YAAIC,KAAK,gBAAG;AAAK,UAAA,GAAG,EAAEZ,MAAV;AAAkB,UAAA,MAAM,EAAC,KAAzB;AAA+B,UAAA,KAAK,EAAC,KAArC;AAA2C,UAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAAZ;;AACA,4BACI;AAAK,UAAA,SAAS,EAAEtC,OAAO,CAACmD,QAAxB;AAAkC,UAAA,OAAO,EAAE,MAAI;AAACC,YAAAA,kBAAkB,CAAC,IAAD,EAAOrB,OAAO,CAACgB,IAAf,EAAqBT,MAArB,CAAlB;AAA+C,WAA/F;AAAA,qBACKY,KADL,eAEI;AAAA,sBAAcnB,OAAO,CAACgB,IAAR,CAAaM,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCvB,OAAO,CAACgB,IAAR,CAAaQ,KAAb,CAAmB,CAAnB;AAArD,aAAQvB,GAAR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMC,OAlBW,CAAD,CAAX;AAmBH,KAvBD;AAyBH,GA5BQ,EA4BN,CAAC3B,cAAD,CA5BM,CAAT;;AA8BA,QAAM+C,kBAAkB,GAAG,CAACI,KAAD,EAAQC,WAAR,EAAqBC,YAArB,KAAsC;AAE7D1C,IAAAA,kBAAkB,CAACyC,WAAD,CAAlB;AACAvC,IAAAA,0BAA0B,CAACwC,YAAD,CAA1B;AACA5C,IAAAA,QAAQ,CAAC0C,KAAD,CAAR;AACA5D,IAAAA,KAAK,CAAC2B,GAAN,CAAU,uCAAuCkC,WAAjD,EACCjC,IADD,CACMC,GAAG,IAAIL,2BAA2B,CAACK,GAAG,CAACC,IAAJ,CAASiC,SAAV,CADxC,EAECX,KAFD,CAEOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAFd;AAIH,GATD;;AAUA,QAAMW,eAAe,GAAG,MAAM;AAC1B,QAAGnD,eAAH,EAAoBH,iBAAiB,CAACG,eAAD,CAAjB,CAApB,KACKoD,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,UAArC,GAAkD,QAAlD;AACR,GAHD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAG1D,WAAH,EAAgBD,iBAAiB,CAACC,WAAD,CAAjB,CAAhB,KACKD,iBAAiB,CAACF,OAAD,CAAjB;AACR,GAHD;;AAMA,sBACI;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACkE,gBAAxB;AAAA,gBACK,CAACrD,KAAD,IAAUF;AADf;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOKE,KAAK,iBACF,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEuC,kBAApB;AAAwC,MAAA,IAAI,EAAErC,eAA9C;AACA,MAAA,YAAY,EAAEE,uBADd;AAEA,MAAA,SAAS,EAAEE;AAFX;AAAA;AAAA;AAAA;AAAA,YARR,eAYI;AAAQ,MAAA,SAAS,EAAEnB,OAAO,CAACmE,UAA3B;AAAA,8BACI;AAAA,kBACK,CAACtD,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAiB,UAAA,SAAS,EAAEb,OAAO,CAACoE,QAApC;AACA,UAAA,KAAK,EAAE3D,eAAe,GAAE;AAACuD,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WADhD;AAEA,UAAA,OAAO,EAAIJ,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACK,CAAC/C,KAAD,iBACD;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,SAAS,EAAEb,OAAO,CAACqE,IAArC;AACA,UAAA,KAAK,EAAE9D,WAAW,GAAE;AAACyD,YAAAA,UAAU,EAAC;AAAZ,WAAF,GAA0B;AAACA,YAAAA,UAAU,EAAE;AAAb,WAD5C;AAEA,UAAA,OAAO,EAAIC,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAhGD;;GAAM9D,O;;KAAAA,O;AAiGN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport classes from './pokemon.module.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Modal from '../Modal/Modal';\r\n// import SpinnerModal from '../SpinnerModal/SpinnerModal';\r\nconst Pokemon = () => {\r\n    const baseURL = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n    const [nextPageURL, setNextPageURL] = useState('');\r\n    const [previousPageURL, setPreviousPageURL] = useState('');\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState('');\r\n    const [selectedPokemonImageURL, setSelectedPokemonImageURL] = useState(''); \r\n    const [selectedPokemonAbilities, selectedPokemonSetAbilities] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        axios.get(currentPageURL)\r\n        .then(res => {\r\n            setPreviousPageURL(res.data.previous);\r\n            setNextPageURL(res.data.next);\r\n            setPokemons(res.data.results.map((pokemon, idx) => {\r\n            \r\n            let p = pokemon.url.split(\"/\");\r\n            let img_idx = p[p.length - 2];\r\n            let source = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + img_idx.toString() + \".png\";\r\n            let getAbilitiesURL = baseURL + \"/\" + img_idx.toString();\r\n            axios.get(getAbilitiesURL)\r\n            .then(res => {\r\n            cres.data.types.map(type => console.log(type.ability.name));\r\n            })\r\n            .catch(err => console.log(err));\r\n            let image = <img src={source} height=\"250\" width=\"250\" alt=\"...\"></img>;\r\n            return (\r\n                <div className={classes.gridItem} onClick={()=>{toggleModalHandler(true, pokemon.name, source)}}>\r\n                    {image}\r\n                    <p key={idx}>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</p>\r\n                </div>\r\n                )\r\n            }));\r\n        })\r\n\r\n    }, [currentPageURL])\r\n\r\n    const toggleModalHandler = (isSet, pokemonName, pokemonImage) => {\r\n\r\n        setSelectedPokemon(pokemonName);\r\n        setSelectedPokemonImageURL(pokemonImage); \r\n        setModal(isSet);\r\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName)\r\n        .then(res => selectedPokemonSetAbilities(res.data.abilities))\r\n        .catch(err => console.log(err));\r\n       \r\n    }\r\n    const getPreviousPage = () => {\r\n        if(previousPageURL) setCurrentPageURL(previousPageURL);\r\n        else document.getElementById('pre').style.visibility = 'hidden';\r\n    }\r\n    const getNextPage = () => {\r\n        if(nextPageURL) setCurrentPageURL(nextPageURL);\r\n        else setCurrentPageURL(baseURL);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>   \r\n\r\n            <Navbar/>\r\n            <div className={classes.pokemonContainer}>\r\n                {!modal && pokemons}\r\n            </div>   \r\n\r\n            {modal && \r\n                <Modal toggleModal={toggleModalHandler} name={selectedPokemon} \r\n                pokemonImage={selectedPokemonImageURL}\r\n                abilities={selectedPokemonAbilities}/>}\r\n            \r\n            <footer className={classes.NavButtons}>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"pre\" className={classes.Previous}\r\n                    style={previousPageURL? {visibility:'visible'}: {visibility: 'hidden'}}\r\n                    onClick = {getPreviousPage}>\r\n                        Previous\r\n                    </button>}\r\n                </div>\r\n                <div>\r\n                    {!modal && \r\n                    <button id=\"next\" className={classes.Next}\r\n                    style={nextPageURL? {visibility:'visible'}: {visibility: 'hidden'}} \r\n                    onClick = {getNextPage}>\r\n                        Next\r\n                    </button>}   \r\n                </div>\r\n            </footer>  \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}