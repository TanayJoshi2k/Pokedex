[{"C:\\Users\\Prashant Joshi\\pokemon\\src\\index.js":"1","C:\\Users\\Prashant Joshi\\pokemon\\src\\App.js":"2","C:\\Users\\Prashant Joshi\\pokemon\\src\\Navbar\\Navbar.js":"3","C:\\Users\\Prashant Joshi\\pokemon\\src\\Pokemon\\Pokemon.js":"4","C:\\Users\\Prashant Joshi\\pokemon\\src\\Modal\\Modal.js":"5","C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonCard\\PokemonCard.js":"6","C:\\Users\\Prashant Joshi\\pokemon\\src\\Footer\\Footer.js":"7","C:\\Users\\Prashant Joshi\\pokemon\\src\\Gradients\\Gradients.js":"8","C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonLazyLoad\\PokemonLazyLoad.js":"9","C:\\Users\\Prashant Joshi\\pokemon\\src\\Search\\Search.js":"10","C:\\Users\\Prashant Joshi\\pokemon\\src\\SearchPokemonCard\\SearchPokemonCard.js":"11"},{"size":218,"mtime":1638243910560,"results":"12","hashOfConfig":"13"},{"size":244,"mtime":1638334867383,"results":"14","hashOfConfig":"13"},{"size":495,"mtime":1638261975045,"results":"15","hashOfConfig":"13"},{"size":4264,"mtime":1638276238801,"results":"16","hashOfConfig":"13"},{"size":2959,"mtime":1640673799278,"results":"17","hashOfConfig":"13"},{"size":1173,"mtime":1640836409942,"results":"18","hashOfConfig":"13"},{"size":949,"mtime":1637927573897,"results":"19","hashOfConfig":"13"},{"size":3456,"mtime":1638249183267,"results":"20","hashOfConfig":"13"},{"size":7220,"mtime":1640665541009,"results":"21","hashOfConfig":"13"},{"size":746,"mtime":1639740300251,"results":"22","hashOfConfig":"13"},{"size":1318,"mtime":1640835733880,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11zt6fg",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Prashant Joshi\\pokemon\\src\\index.js",[],["51","52"],"C:\\Users\\Prashant Joshi\\pokemon\\src\\App.js",["53"],"import './App.css';\nimport Pokemon from './Pokemon/Pokemon';\nimport PokemonLazyLoad from './PokemonLazyLoad/PokemonLazyLoad';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PokemonLazyLoad/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\Navbar\\Navbar.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Pokemon\\Pokemon.js",["54","55"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"./pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst Pokemon = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [pageURLs, setPageURLs] = useState([]);\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  function fetchDetails() {\r\n\r\n    axios.get(currentPageURL).then((res) => {\r\n      setPageURLs([res.data.previous, res.data.next]);\r\n      let requests = res.data.results.map((pokemon) => {\r\n        return axios.get(pokemon.url);\r\n      });\r\n      return Promise.all(requests).then((data) => {\r\n        setPokemons(data);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchDetails();\r\n  }, [currentPageURL]);\r\n\r\n  const toggleModalHandler = (\r\n    isSet,\r\n    pokemonName,\r\n    pokemonImage,\r\n    backgroundColor,\r\n    abilities,\r\n    stats,\r\n    height,\r\n    weight,\r\n    types\r\n  ) => {\r\n    // The below setStates are batched together.\r\n    setSelectedPokemonData({\r\n      ...selectedPokemonData,\r\n      name: pokemonName,\r\n      imageURL: pokemonImage,\r\n      backgroundColor: backgroundColor,\r\n      abilities: abilities,\r\n      stats: stats,\r\n      height: height,\r\n      weight: weight,\r\n      types: types,\r\n    });\r\n    setModal(isSet);\r\n  };\r\n  const getPreviousPage = () => {\r\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);\r\n    else document.getElementById(\"pre\").style.visibility = \"hidden\";\r\n  };\r\n  const getNextPage = () => {\r\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);\r\n    else setCurrentPageURL(baseURL);\r\n  };\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      <div className={classes.pokemonContainer}>\r\n        {!modal &&\r\n          pokemons.map((record, i) => {\r\n            let color = Gradients(record.data.types);\r\n            if (record.data.types.length === 2) {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[1].type.name,\r\n                record.data.types.length\r\n              );\r\n            } else {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[0].type.name,\r\n                record.data.types.length\r\n              );\r\n            }\r\n\r\n            return (\r\n              <PokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    record.data.name,\r\n                    record.data.sprites.front_default,\r\n                    color,\r\n                    record.data.abilities,\r\n                    record.data.stats,\r\n                    record.data.height,\r\n                    record.data.weight,\r\n                    record.data.types\r\n                  )\r\n                }\r\n                types={record.data.types}\r\n                name={record.data.name}\r\n                image={record.data.sprites.front_default}\r\n                types={record.data.types}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && (\r\n        <Footer\r\n          modal={modal}\r\n          previousPageURL={pageURLs[0]}\r\n          nextPageURL={pageURLs[1]}\r\n          goNext={getNextPage}\r\n          goPrev={getPreviousPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Pokemon;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\Modal\\Modal.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonCard\\PokemonCard.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Footer\\Footer.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Gradients\\Gradients.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonLazyLoad\\PokemonLazyLoad.js",["56","57"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"../Pokemon/pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Search from \"../Search/Search\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport SearchPokemonCard from \"../SearchPokemonCard/SearchPokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst PokemonLazyLoad = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n  const [offset, setOffset] = useState(0);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [searchPokemon, setSearchPokemon] = useState(\"\");\r\n  const [searchPokemonData, setSearchPokemonData] = useState({});\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  const getSearchPokemon = (e) => {\r\n    setSearching(false);\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${searchPokemon.toLowerCase()}`)\r\n        .then((res) => setSearchPokemonData(res.data))\r\n        .catch(() => console.log(\"No matching pokemon found!\"));\r\n      setSearching(true);\r\n    }\r\n  };\r\n\r\n  const getPosts = (offset, limit) => {\r\n    axios\r\n      .get(baseURL + `?offset=${offset}&limit=${limit}`)\r\n      .then((res) => {\r\n        let requests = res.data.results.map((pokemon) => {\r\n          return axios.get(pokemon.url);\r\n        });\r\n        return Promise.all(requests).then((data) => {\r\n          setPokemons([...pokemons, ...data]);\r\n          setIsFetching(false);\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const getMorePosts = () => {\r\n    getPosts(offset, offset + 20);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    )\r\n      return;\r\n    setOffset((prevOffset) => prevOffset + 20);\r\n    setIsFetching(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPosts(offset, offset + 20);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    else getMorePosts();\r\n  }, [isFetching]);\r\n\r\n  const toggleModalHandler = (isSet, ...pokemonDetails) => {\r\n    setSelectedPokemonData({\r\n      name: pokemonDetails[0],\r\n      imageURL: pokemonDetails[1],\r\n      backgroundColor: pokemonDetails[2],\r\n      abilities: pokemonDetails[3],\r\n      stats: pokemonDetails[4],\r\n      height: pokemonDetails[5],\r\n      weight: pokemonDetails[6],\r\n      types: pokemonDetails[7],\r\n    });\r\n    setModal(isSet);\r\n  };\r\n\r\n  if (Object.keys(searchPokemonData).length !== 0) {\r\n    let color;\r\n    if (searchPokemonData.types.length === 2) {\r\n      color = Gradients(\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types[1].type.name,\r\n        searchPokemonData.types.length\r\n      );\r\n    } else {\r\n      color = Gradients(\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types.length\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {!modal && (\r\n          <div className={classes.searchPokemonContainer}>\r\n            {!modal && (\r\n              <SearchPokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    searchPokemonData.name,\r\n                    searchPokemonData.sprites.front_default,\r\n                    color,\r\n                    searchPokemonData.abilities,\r\n                    searchPokemonData.stats,\r\n                    searchPokemonData.height,\r\n                    searchPokemonData.weight,\r\n                    searchPokemonData.types\r\n                  )\r\n                }\r\n                types={searchPokemonData.types}\r\n                name={searchPokemonData.name}\r\n                image={searchPokemonData.sprites.front_default}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        {modal && (\r\n          <Modal\r\n            toggleModal={toggleModalHandler}\r\n            backgroundColor={color}\r\n            name={searchPokemonData.name}\r\n            pokemonImage={searchPokemonData.sprites.front_default}\r\n            abilities={searchPokemonData.abilities}\r\n            stats={searchPokemonData.stats}\r\n            height={searchPokemonData.height}\r\n            weight={searchPokemonData.weight}\r\n            types={searchPokemonData.types}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      {!modal && (\r\n        <Search\r\n          searchPokemon={setSearchPokemon}\r\n          getSearchPokemon={getSearchPokemon}\r\n        />\r\n      )}\r\n      {!searching ? ( //if searching==false, render the pokemon container. else none\r\n        <div className={classes.pokemonContainer}>\r\n          {!modal &&\r\n            pokemons.flat().map((record, i) => {\r\n              let color = Gradients(record.data.types);\r\n              if (record.data.types.length === 2) {\r\n                color = Gradients(\r\n                  record.data.types[0].type.name,\r\n                  record.data.types[1].type.name,\r\n                  record.data.types.length\r\n                );\r\n              } else {\r\n                color = Gradients(\r\n                  record.data.types[0].type.name,\r\n                  record.data.types[0].type.name,\r\n                  record.data.types.length\r\n                );\r\n              }\r\n\r\n              return (\r\n                <PokemonCard\r\n                  toggleModal={() =>\r\n                    toggleModalHandler(\r\n                      true,\r\n                      record.data.name,\r\n                      record.data.sprites.front_default,\r\n                      color,\r\n                      record.data.abilities,\r\n                      record.data.stats,\r\n                      record.data.height,\r\n                      record.data.weight,\r\n                      record.data.types\r\n                    )\r\n                  }\r\n                  types={record.data.types}\r\n                  name={record.data.name}\r\n                  image={record.data.sprites.front_default}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      ) : null}\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && <Footer modal={modal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonLazyLoad;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\Search\\Search.js",["58","59","60"],"import React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport axios from \"axios\";\r\nimport classes from \"./Search.module.css\";\r\n\r\nconst Search = (props) => {\r\n\r\n  return (\r\n    <div className={classes.parent}>\r\n      <form>\r\n        <div className={classes.inputContainer}>\r\n          <img\r\n            className={classes.search}\r\n            src=\"https://img.icons8.com/ios-glyphs/30/000000/search--v1.png\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Hit Enter\"\r\n            onChange={(e) => props.searchPokemon(e.target.value)}\r\n            onKeyDown={props.getSearchPokemon}\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\SearchPokemonCard\\SearchPokemonCard.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":34,"column":6,"nodeType":"71","endLine":34,"endColumn":22,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":108,"column":17,"nodeType":"75","messageId":"76","endLine":108,"endColumn":42},{"ruleId":"69","severity":1,"message":"77","line":71,"column":6,"nodeType":"71","endLine":71,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":76,"column":6,"nodeType":"71","endLine":76,"endColumn":18,"suggestions":"80"},{"ruleId":"65","severity":1,"message":"81","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"65","severity":1,"message":"82","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":12,"column":11,"nodeType":"85","endLine":15,"endColumn":13},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Pokemon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.","ArrayExpression",["88"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has missing dependencies: 'getPosts' and 'offset'. Either include them or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'getMorePosts'. Either include it or remove the dependency array.",["90"],"'useState' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [currentPageURL, fetchDetails]",{"range":"97","text":"98"},"Update the dependencies array to be: [getPosts, offset]",{"range":"99","text":"100"},"Update the dependencies array to be: [getMorePosts, isFetching]",{"range":"101","text":"102"},[1139,1155],"[currentPageURL, fetchDetails]",[2401,2403],"[getPosts, offset]",[2491,2503],"[getMorePosts, isFetching]"]