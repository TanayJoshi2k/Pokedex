[{"C:\\Users\\Prashant Joshi\\pokemon\\src\\index.js":"1","C:\\Users\\Prashant Joshi\\pokemon\\src\\App.js":"2","C:\\Users\\Prashant Joshi\\pokemon\\src\\Navbar\\Navbar.js":"3","C:\\Users\\Prashant Joshi\\pokemon\\src\\Pokemon\\Pokemon.js":"4","C:\\Users\\Prashant Joshi\\pokemon\\src\\Modal\\Modal.js":"5","C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonCard\\PokemonCard.js":"6","C:\\Users\\Prashant Joshi\\pokemon\\src\\Footer\\Footer.js":"7","C:\\Users\\Prashant Joshi\\pokemon\\src\\Gradients\\Gradients.js":"8","C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonLazyLoad\\PokemonLazyLoad.js":"9","C:\\Users\\Prashant Joshi\\pokemon\\src\\Search\\Search.js":"10","C:\\Users\\Prashant Joshi\\pokemon\\src\\SearchPokemonCard\\SearchPokemonCard.js":"11","C:\\Users\\Prashant Joshi\\pokemon\\src\\Navigate\\Navigate.js":"12","C:\\Users\\Prashant Joshi\\pokemon\\src\\Spinner\\Spinner.js":"13"},{"size":218,"mtime":1638243910560,"results":"14","hashOfConfig":"15"},{"size":329,"mtime":1649663479290,"results":"16","hashOfConfig":"15"},{"size":495,"mtime":1638261975045,"results":"17","hashOfConfig":"15"},{"size":4345,"mtime":1640857905524,"results":"18","hashOfConfig":"15"},{"size":2776,"mtime":1649659326852,"results":"19","hashOfConfig":"15"},{"size":1173,"mtime":1649660650527,"results":"20","hashOfConfig":"15"},{"size":994,"mtime":1649656374026,"results":"21","hashOfConfig":"15"},{"size":3456,"mtime":1638249183267,"results":"22","hashOfConfig":"15"},{"size":7496,"mtime":1649662344575,"results":"23","hashOfConfig":"15"},{"size":701,"mtime":1649656538944,"results":"24","hashOfConfig":"15"},{"size":1274,"mtime":1649659791162,"results":"25","hashOfConfig":"15"},{"size":1313,"mtime":1641990456526,"results":"26","hashOfConfig":"15"},{"size":194,"mtime":1649662621502,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11zt6fg",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Prashant Joshi\\pokemon\\src\\index.js",[],["63","64"],"C:\\Users\\Prashant Joshi\\pokemon\\src\\App.js",["65"],"// Import Components\n\nimport PokemonLazyLoad from './PokemonLazyLoad/PokemonLazyLoad';\n// import Navigate from './Navigate/Navigate';\nimport Spinner from './Spinner/Spinner';\n\n// Import CSS\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PokemonLazyLoad/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\Navbar\\Navbar.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Pokemon\\Pokemon.js",["66","67","68"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"./pokemon.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst Pokemon = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n  const [currentPageURL, setCurrentPageURL] = useState(baseURL);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [pageURLs, setPageURLs] = useState([]);\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n\r\n  function fetchDetails() {\r\n    axios.get(currentPageURL).then((res) => {\r\n      setPageURLs([res.data.previous, res.data.next]);\r\n      let requests = res.data.results.map((pokemon) => {\r\n        return axios.get(pokemon.url);\r\n      });\r\n      return Promise.all(requests).then((data) => {\r\n        setPokemons(data);\r\n      });\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchDetails();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchDetails();\r\n  }, [currentPageURL]);\r\n\r\n  const toggleModalHandler = (\r\n    isSet,\r\n    pokemonName,\r\n    pokemonImage,\r\n    backgroundColor,\r\n    abilities,\r\n    stats,\r\n    height,\r\n    weight,\r\n    types\r\n  ) => {\r\n    // The below setStates are batched together.\r\n    setSelectedPokemonData({\r\n      ...selectedPokemonData,\r\n      name: pokemonName,\r\n      imageURL: pokemonImage,\r\n      backgroundColor: backgroundColor,\r\n      abilities: abilities,\r\n      stats: stats,\r\n      height: height,\r\n      weight: weight,\r\n      types: types,\r\n    });\r\n    setModal(isSet);\r\n  };\r\n  const getPreviousPage = () => {\r\n    if (pageURLs[0]) setCurrentPageURL(pageURLs[0]);\r\n    else document.getElementById(\"pre\").style.visibility = \"hidden\";\r\n  };\r\n  const getNextPage = () => {\r\n    if (pageURLs[1]) setCurrentPageURL(pageURLs[1]);\r\n    else setCurrentPageURL(baseURL);\r\n  };\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      <div className={classes.pokemonContainer}>\r\n        {!modal &&\r\n          pokemons.map((record, i) => {\r\n            let color = Gradients(record.data.types);\r\n            if (record.data.types.length === 2) {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[1].type.name,\r\n                record.data.types.length\r\n              );\r\n            } else {\r\n              color = Gradients(\r\n                record.data.types[0].type.name,\r\n                record.data.types[0].type.name,\r\n                record.data.types.length\r\n              );\r\n            }\r\n\r\n            return (\r\n              <PokemonCard\r\n                toggleModal={() =>\r\n                  toggleModalHandler(\r\n                    true,\r\n                    record.data.name,\r\n                    record.data.sprites.front_default,\r\n                    color,\r\n                    record.data.abilities,\r\n                    record.data.stats,\r\n                    record.data.height,\r\n                    record.data.weight,\r\n                    record.data.types\r\n                  )\r\n                }\r\n                types={record.data.types}\r\n                name={record.data.name}\r\n                image={record.data.sprites.front_default}\r\n                types={record.data.types}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && (\r\n        <Footer\r\n          modal={modal}\r\n          previousPageURL={pageURLs[0]}\r\n          nextPageURL={pageURLs[1]}\r\n          goNext={getNextPage}\r\n          goPrev={getPreviousPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Pokemon;\r\n",["69","70"],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Modal\\Modal.js",["71"],"import React from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Modal = (props) => {\r\n  const {\r\n    abilities,\r\n    stats,\r\n    types,\r\n    toggleModal,\r\n    backgroundColor,\r\n    name,\r\n    pokemonImage,\r\n    height,\r\n    weight,\r\n  } = props;\r\n\r\n  let abilities_arr = abilities.map((element) => {\r\n    return <p key={Math.random()}>{element.ability.name}</p>;\r\n  });\r\n\r\n  let pokeStats = stats.map((e) => {\r\n    return [e.stat.name, e.base_stat];\r\n  });\r\n\r\n  let type1 = types[0].type.name;\r\n\r\n  return (\r\n    <div className={classes.ModalContainer} onClick={()=> {toggleModal(false)}}>\r\n      \r\n      <div\r\n        className={classes.Modal}\r\n        style={{\r\n          background: `linear-gradient(${backgroundColor[0]}, ${backgroundColor[1]})`,\r\n        }}\r\n      >\r\n        <div className={classes.imgContainer}>\r\n          <div className={classes.translucent}></div>\r\n          <div className={classes.name}>{name}</div>\r\n          <img className={classes.img} src={pokemonImage} alt=\"...\"></img>\r\n          <div className={classes.types}>\r\n            <p style={{ display: \"inline\" }}>{type1} </p>\r\n            <p style={{ display: \"inline\" }}>\r\n              {types.length === 2 ? types[1].type.name : \"\"}\r\n            </p>\r\n          </div>\r\n          <div className={classes.heightWeight}>\r\n            <strong>Height</strong> {height / 10 + \"m\"}\r\n          </div>\r\n          <div className={classes.heightWeight}>\r\n            <strong>Weight</strong> {weight / 10 + \"kg\"}\r\n          </div>\r\n        </div>\r\n        <div className={classes.statsContainer}>\r\n          <p className={classes.head}>Abilities</p>\r\n          <div className={classes.abilities}>{abilities_arr}</div>\r\n          <p className={classes.head}>Base Stats</p>\r\n          <div className={classes.stats}>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{pokeStats[0][0]}</td>\r\n                  <td>{pokeStats[1][0]}</td>\r\n                  <td>{pokeStats[2][0]}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{pokeStats[0][1]}</td>\r\n                  <td>{pokeStats[1][1]}</td>\r\n                  <td>{pokeStats[2][1]}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{pokeStats[3][0]}</td>\r\n                  <td>{pokeStats[4][0]}</td>\r\n                  <td>{pokeStats[5][0]}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{pokeStats[3][1]}</td>\r\n                  <td>{pokeStats[4][1]}</td>\r\n                  <td>{pokeStats[5][1]}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonCard\\PokemonCard.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Footer\\Footer.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Gradients\\Gradients.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\PokemonLazyLoad\\PokemonLazyLoad.js",["72","73","74"],"//Import Axios and React\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Import CSS\r\nimport classes from \"../Pokemon/pokemon.module.css\";\r\n\r\n// Import Components\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Search from \"../Search/Search\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport SearchPokemonCard from \"../SearchPokemonCard/SearchPokemonCard\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Gradients from \"../Gradients/Gradients\";\r\n\r\nconst PokemonLazyLoad = () => {\r\n  const baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n  const [offset, setOffset] = useState(0);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [searchPokemon, setSearchPokemon] = useState(\"\");\r\n  const [searchPokemonData, setSearchPokemonData] = useState({});\r\n  const [selectedPokemonData, setSelectedPokemonData] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  const getSearchPokemon = (e) => {\r\n    if (e.key === \"Enter\" && e.target.value != \"\") {\r\n      setSearching(true);\r\n      e.preventDefault();\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${searchPokemon.toLowerCase()}`)\r\n        .then((res) => {\r\n          setSearchPokemonData(res.data);\r\n          setSearching(false);\r\n        })\r\n        .catch(() => console.log(\"No matching pokemon found!\"));\r\n    }\r\n  };\r\n\r\n  const getPosts = (offset, limit) => {\r\n    axios\r\n      .get(baseURL + `?offset=${offset}&limit=${limit - offset}`)\r\n      .then((res) => {\r\n        let requests = res.data.results.map((pokemon) => {\r\n          return axios.get(pokemon.url);\r\n        });\r\n        return Promise.all(requests).then((data) => {\r\n          setPokemons([...pokemons, ...data]);\r\n          setIsFetching(false);\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const getMorePosts = () => {\r\n    getPosts(offset, offset + 10);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + window.pageYOffset >=\r\n      document.body.offsetHeight - 100\r\n    ) {\r\n      setOffset((prevOffset) => prevOffset + 10);\r\n      setIsFetching(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPosts(offset, offset + 10);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    else getMorePosts();\r\n  }, [isFetching]);\r\n\r\n  const toggleModalHandler = (isSet, ...pokemonDetails) => {\r\n    setSelectedPokemonData({\r\n      name: pokemonDetails[0],\r\n      imageURL: pokemonDetails[1],\r\n      backgroundColor: pokemonDetails[2],\r\n      abilities: pokemonDetails[3],\r\n      stats: pokemonDetails[4],\r\n      height: pokemonDetails[5],\r\n      weight: pokemonDetails[6],\r\n      types: pokemonDetails[7],\r\n    });\r\n    setModal(isSet);\r\n  };\r\n\r\n  if (searching) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (Object.keys(searchPokemonData).length !== 0) {\r\n    let color;\r\n    if (searchPokemonData.types.length === 2) {\r\n      color = Gradients(\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types[1].type.name,\r\n        searchPokemonData.types.length\r\n      );\r\n    } else {\r\n      color = Gradients(\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types[0].type.name,\r\n        searchPokemonData.types.length\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {!modal && (\r\n          <div className={classes.searchPokemonContainer}>\r\n            <SearchPokemonCard\r\n              toggleModal={toggleModalHandler}\r\n              backgroundColor={color}\r\n              name={searchPokemonData.name}\r\n              pokemonImage={searchPokemonData.sprites.front_default}\r\n              abilities={searchPokemonData.abilities}\r\n              stats={searchPokemonData.stats}\r\n              height={searchPokemonData.height}\r\n              weight={searchPokemonData.weight}\r\n              types={searchPokemonData.types}\r\n            />\r\n          </div>\r\n        )}\r\n        {modal && (\r\n          <Modal\r\n            toggleModal={toggleModalHandler}\r\n            backgroundColor={color}\r\n            name={searchPokemonData.name}\r\n            pokemonImage={searchPokemonData.sprites.front_default}\r\n            abilities={searchPokemonData.abilities}\r\n            stats={searchPokemonData.stats}\r\n            height={searchPokemonData.height}\r\n            weight={searchPokemonData.weight}\r\n            types={searchPokemonData.types}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!modal && <Navbar />}\r\n      {!modal && (\r\n        <Search\r\n          searchPokemon={setSearchPokemon}\r\n          getSearchPokemon={getSearchPokemon}\r\n        />\r\n      )}\r\n      {!modal && ( //if searching==false, render the pokemon container. else none\r\n        <div className={classes.pokemonContainer}>\r\n          {!modal &&\r\n            pokemons.flat().map((record, i) => {\r\n              let color = Gradients(record.data.types);\r\n              if (record.data.types.length === 2) {\r\n                color = Gradients(\r\n                  record.data.types[0].type.name,\r\n                  record.data.types[1].type.name,\r\n                  record.data.types.length\r\n                );\r\n              } else {\r\n                color = Gradients(\r\n                  record.data.types[0].type.name,\r\n                  record.data.types[0].type.name,\r\n                  record.data.types.length\r\n                );\r\n              }\r\n\r\n              return (\r\n                <PokemonCard\r\n                  toggleModal={() =>\r\n                    toggleModalHandler(\r\n                      true,\r\n                      record.data.name,\r\n                      record.data.sprites.front_default,\r\n                      color,\r\n                      record.data.abilities,\r\n                      record.data.stats,\r\n                      record.data.height,\r\n                      record.data.weight,\r\n                      record.data.types\r\n                    )\r\n                  }\r\n                  types={record.data.types}\r\n                  name={record.data.name}\r\n                  image={record.data.sprites.front_default}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n\r\n      {modal && (\r\n        <Modal\r\n          toggleModal={toggleModalHandler}\r\n          backgroundColor={selectedPokemonData[\"backgroundColor\"]}\r\n          name={selectedPokemonData[\"name\"]}\r\n          pokemonImage={selectedPokemonData[\"imageURL\"]}\r\n          abilities={selectedPokemonData[\"abilities\"]}\r\n          stats={selectedPokemonData[\"stats\"]}\r\n          height={selectedPokemonData[\"height\"]}\r\n          weight={selectedPokemonData[\"weight\"]}\r\n          types={selectedPokemonData[\"types\"]}\r\n        />\r\n      )}\r\n\r\n      {!modal && <Footer modal={modal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonLazyLoad;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\Search\\Search.js",["75"],"import React from \"react\";\r\nimport classes from \"./Search.module.css\";\r\n\r\nconst Search = (props) => {\r\n\r\n  const {searchPokemon, getSearchPokemon} = props;\r\n  return (\r\n    <div className={classes.parent}>\r\n      <form>\r\n        <div className={classes.inputContainer}>\r\n          <img\r\n            className={classes.search}\r\n            src=\"https://img.icons8.com/ios-glyphs/30/000000/search--v1.png\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Hit Enter\"\r\n            onChange={(e) => searchPokemon(e.target.value)}\r\n            onKeyDown={getSearchPokemon}\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Prashant Joshi\\pokemon\\src\\SearchPokemonCard\\SearchPokemonCard.js",[],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Navigate\\Navigate.js",["76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport classes from \"./Navigate.module.css\";\r\nfunction Navigate() {\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const getPosts = (limit) => {\r\n    axios.get(`https://picsum.photos/v2/list?page=${limit}&limit=100`).then((res) => {\r\n      setPosts([...posts, ...res.data]);\r\n    })\r\n    .then(()=> {\r\n        setLoading(false);\r\n    })\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + window.pageYOffset >=\r\n      document.body.offsetHeight\r\n    ) {\r\n        console.log(\"scrolled to bottom\")\r\n      setPage(prevPage => prevPage + 1);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    getPosts(1);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) return;\r\n    else getPosts(page);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className={classes.parentContainer}>\r\n      {posts.map((post) => (\r\n        <div>\r\n          <img src={post.download_url} alt=\"\" style={{height:\"100%\", width:\"100%\"}}/>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigate;\r\n",["78","79"],"C:\\Users\\Prashant Joshi\\pokemon\\src\\Spinner\\Spinner.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":32,"column":6,"nodeType":"90","endLine":32,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":37,"column":6,"nodeType":"90","endLine":37,"endColumn":22,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":111,"column":17,"nodeType":"95","messageId":"96","endLine":111,"endColumn":42},{"ruleId":"80","replacedBy":"97"},{"ruleId":"82","replacedBy":"98"},{"ruleId":"84","severity":1,"message":"99","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":31,"column":45,"nodeType":"102","messageId":"103","endLine":31,"endColumn":47},{"ruleId":"88","severity":1,"message":"104","line":85,"column":6,"nodeType":"90","endLine":85,"endColumn":8,"suggestions":"105"},{"ruleId":"88","severity":1,"message":"106","line":90,"column":6,"nodeType":"90","endLine":90,"endColumn":18,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":11,"nodeType":"110","endLine":14,"endColumn":13},{"ruleId":"88","severity":1,"message":"111","line":32,"column":6,"nodeType":"90","endLine":32,"endColumn":8,"suggestions":"112"},{"ruleId":"88","severity":1,"message":"113","line":37,"column":6,"nodeType":"90","endLine":37,"endColumn":15,"suggestions":"114"},{"ruleId":"80","replacedBy":"115"},{"ruleId":"82","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.","ArrayExpression",["119"],["120"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["117"],["118"],"'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getPosts' and 'offset'. Either include them or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'getMorePosts'. Either include it or remove the dependency array.",["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'getPosts' and 'page'. Either include them or remove the dependency array.",["124"],["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [fetchDetails]",{"range":"137","text":"138"},"Update the dependencies array to be: [currentPageURL, fetchDetails]",{"range":"139","text":"140"},"Update the dependencies array to be: [getPosts, offset]",{"range":"141","text":"142"},"Update the dependencies array to be: [getMorePosts, isFetching]",{"range":"143","text":"144"},"Update the dependencies array to be: [getPosts]",{"range":"145","text":"146"},"Update the dependencies array to be: [getPosts, loading, page]",{"range":"147","text":"148"},[1135,1137],"[fetchDetails]",[1220,1236],"[currentPageURL, fetchDetails]",[2714,2716],"[getPosts, offset]",[2804,2816],"[getMorePosts, isFetching]",[944,946],"[getPosts]",[1031,1040],"[getPosts, loading, page]"]